{"version":3,"sources":["../../src/pages/login/login.ts","../../src/pages/admin/admin.ts","../../node_modules/@angular/core/esm5 lazy","../../src/pages/admin-visitor-data/admin-visitor-data.ts","../../src lazy","../../src/pages/register0/register0.ts","../../src/pages/register1/register1.ts","../../src/pages/register2/register2.ts","../../src/pages/register3/register3.ts","../../src/pages/register4/register4.ts","../../src/pages/register5/register5.ts","../../src/pages/register6/register6.ts","../../src/pages/questionnaire1/questionnaire1.ts","../../src/pages/questionnaire2/questionnaire2.ts","../../src/pages/questionnaire3/questionnaire3.ts","../../src/pages/questionnaire4/questionnaire4.ts","../../src/pages/questionnaire6/questionnaire6.ts","../../src/pages/questionnaire7/questionnaire7.ts","../../src/pages/questionnaire9/questionnaire9.ts","../../src/pages/questionnaire10/questionnaire10.ts","../../src/pages/questionnaire11/questionnaire11.ts","../../src/pages/diversity-questionnaire0/diversity-questionnaire0.ts","../../src/pages/diversity-questionnaire1/diversity-questionnaire1.ts","../../src/pages/diversity-questionnaire2/diversity-questionnaire2.ts","../../src/pages/diversity-questionnaire3/diversity-questionnaire3.ts","../../src/pages/diversity-questionnaire4/diversity-questionnaire4.ts","../../src/pages/diversity-questionnaire5/diversity-questionnaire5.ts","../../src/pages/diversity-questionnaire6/diversity-questionnaire6.ts","../../src/pages/diversity-questionnaire7/diversity-questionnaire7.ts","../../src/pages/diversity-questionnaire8/diversity-questionnaire8.ts","../../src/pages/diversity-questionnaire9/diversity-questionnaire9.ts","../../src/pages/logout/logout.ts","../../src/providers/share/share.ts","../../src/pages/admin-app-settings/admin-app-settings.ts","../../src/pages/admin-visitor-history/admin-visitor-history.ts","../../src/pages/csv-downloads/csv-downloads.ts","../../src/providers/google-drive/google-drive.ts","../../src/providers/backand/backand.ts","../../src/providers/connection-check/connection-check.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/homepage/homepage.ts","../../node_modules/moment/locale ^/.*$","../../src/pages/admin-home/admin-home.ts","../../src/pages/graph1/graph1.ts","../../src/pages/graph2/graph2.ts","../../src/pages/graph4/graph4.ts","../../src/providers/sqlitedatabase/sqlitedatabase.ts","../../src/pages/graph3/graph3.ts","../../src/pages/graph-scatter1/graph-scatter1.ts","../../src/pages/graph-bar1/graph-bar1.ts","../../src/pages/graph-scatter2/graph-scatter2.ts","../../src/pages/graph-pie2/graph-pie2.ts","../../src/pages/graph-bar2/graph-bar2.ts","../../src/pages/graph-scatter3/graph-scatter3.ts","../../src/pages/graph-pie3/graph-pie3.ts","../../src/pages/graph-bar3/graph-bar3.ts","../../src/pages/graph-scatter4/graph-scatter4.ts","../../src/pages/graph-pie4/graph-pie4.ts","../../src/pages/graph-bar4/graph-bar4.ts","../../src/pages/graph-scatter5/graph-scatter5.ts","../../src/pages/graph-bar5/graph-bar5.ts","../../src/pages/graph-pie5/graph-pie5.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase'\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    loginText = 'Login';\n    lastNameInput = '';\n\n    showList: boolean = false;\n    items: any;\n    selectedItem: any;\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n        this.autoLogoutUser();\n    }\n\n    /**\n   * This method retrieves the name suggestions from the local database. It querries the sutton_user table for users who's last name has some similarity to the \n   * input lastname in the text input box. \n   * @param ev \n   */\n    getItems(ev: any) {\n        this.loginText = \"Login\";\n        // set val to the value of the searchbar\n        let val = ev.target.value || '';\n\n        // populate the list from database\n        this.sqlitedatabase.suggestLastName(val)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return [];\n                }\n\n                this.items = [];\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        this.items.push({\n                            id: data.rows.item(i).id,\n                            first_name: data.rows.item(i).first_name,\n                            last_name: data.rows.item(i).last_name,\n                        });\n                    }\n\n                }\n                // Show the results\n                this.showList = true;\n\n            }, err => {\n                console.log('Error: ', err);\n                return [];\n            });\n\n        // hide the results when the query is empty\n        this.showList = false;\n\n    }\n\n    onEnter() {\n        console.log(\"on enter\")\n        this.setSelection(this.items[0]);\n    }\n\n    /**\n     * This method takes the selected name by the user and parses it to the login button so that the user's name is displayed on the button.\n     * @param item \n     */\n    setSelection(item: any) {\n        console.log(\"selected item:\" + JSON.stringify(item));\n        this.selectedItem = item;\n        this.lastNameInput = item.last_name;\n        this.showList = false;\n        this.loginText = \"Login (\" + item.first_name + \" \" + item.last_name + \")\";\n    }\n\n\n\n    /**\n    * This method is called when the login button is clicked. It  registers the login times stamp of the user into the login_history table. \n    * It then informs the user of the success status of the operation through an alert message.\n    * If a user is already logged in , the alert message will warn the user of this. \n    */\n    loginToApp() {\n        if (this.selectedItem == undefined || this.selectedItem.id == undefined) {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning!!\",\n                message: \"Please select your name to login\",\n            });\n            addTodoAlert.present();\n        } else {\n            this.sqlitedatabase.last_login(this.selectedItem.id)\n                .then((data) => {\n                    console.log(\"Last Login: \" + JSON.stringify(data.rows.item(0)));\n                    if (data.rows.length == 0 || data.rows.item(0).logout_ts != undefined) {\n                        this.sqlitedatabase.login(this.selectedItem.id)\n                            .then(() => {\n                                this.showLoginResponse(\"Login successful\");\n                                // clear lastname\n                                this.clearLogin();\n                            }, err => {\n                                this.showLoginResponse(\"Login failed\");\n                                console.log('Error1: ', err);\n                            });\n                    } else {\n                        this.showLoginResponse(\"Already logged in.\");\n                    }\n                }).catch(e => {\n                    console.log('Error2: ', e);\n                    this.showLoginResponse(\"Login failed\");\n                });\n        }\n    }\n\n    /**\n    * This method is called when a person logs in and shows an alert message with information that the login was succesfull. \n    * @param response \n    */\n    showLoginResponse(response) {\n        let loginResultAlert = this.alertController.create({\n            title: \"Login Response\",\n            message: response,\n        });\n        loginResultAlert.present();\n    }\n\n    /**\n     * This method clears the variables so that they can be used by the next user and resets the text of the login button to 'Login'\n     */\n    clearLogin() {\n        this.lastNameInput = '';\n        this.selectedItem = undefined;\n        this.loginText = 'Login';\n    }\n\n    /**\n    * This method takes the user back to the homepage.\n    * @param params \n    */\n    goToHomepage(params) {\n        if (!params) params = {};\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user back to the previous page which in this case is the homepage.\n     */\n    goBack() {\n        this.navCtrl.pop();\n    }\n\n    /**\n     * This method is activated by entering the current page, therefore needs to be two scenarios for execution:\n     * 1) The auto-logout is executed on the same day as the volunteer's login but after the time\n     * that the farm shuts.\n     * 2) The auto-logout is executed after the day on which the volunteer logged in.\n     */\n    autoLogoutUser() {\n        this.sqlitedatabase.listDetailsForAutoLogout()\n            .then((stats) => {\n                var d = new Date(); //Gives the current time and date\n                var currentTimeMS = d.getTime();\n\n                for (var j = 0; j < stats.length; j++) {\n                    //Below gives us the date to compare\n                    var handledTotalDate = new Date(stats[j].login_time);\n                    var handledYear = handledTotalDate.getFullYear();\n                    var handledMonth = handledTotalDate.getMonth(); //Month in date format is 0-11\n                    var handledDate = handledTotalDate.getDate();\n\n                    var logoutTime = new Date(stats[j].logout_time); //Finds if the logout time exists\n\n                    if (logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (GMT)\" || logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (BST)\") {\n                        var logoutBoolean = 0; //If logout time is null, given date Thu Jan 01 1970...\n                    } else {\n                        logoutBoolean = 1;\n                    }\n\n                    //Creates a logout date on the same day as the login data for 17:00\n                    var dateToSet = new Date();\n                    dateToSet.setDate(handledDate);\n                    dateToSet.setFullYear(handledYear);\n                    dateToSet.setMonth(handledMonth);\n                    dateToSet.setHours(16);\n                    dateToSet.setMinutes(30, 0, 0);\n\n                    console.log(\"Date to set: \" + dateToSet);\n                    var dateToSetMS = dateToSet.getTime();\n\n                    console.log(\"Time to set: \" + dateToSetMS);\n                    var reverseDateTest = new Date(dateToSetMS);\n                    console.log(\"Reverse test: \" + reverseDateTest);\n\n                    //Logs the user out if it finds the value of logoutBoolean = 0\n                    if (currentTimeMS > dateToSetMS && logoutBoolean === 0) {\n                        //Logout user at 17:00 of current date, if it is passed that time on the same day\n                        this.sqlitedatabase.autoLogout(stats[j].user_id, dateToSetMS)\n                            .then(() => {\n\n                            }, err => {\n                                console.log('Error1: ', err);\n                            });\n                    } else {\n                        console.log(\"Already logged out\");\n                    }\n\n\n                }\n            }\n            , err => {\n                console.log(\"something went wrong on auto-logging out users\");\n            });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminHomePage } from '../admin-home/admin-home';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'page-admin',\n  templateUrl: 'admin.html',\n})\nexport class AdminPage {\n\n  passwordInput = '';\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, private alertController: AlertController, private storage: Storage) {\n\n    /**\n        * This is the logic that assigns the desired background, chosen in\n        * admin-app-settings.ts, to the background of the current page.\n        */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n\n  }\n\n  /**\n   * Method takes administrator to the admin homepage, provided the\n   * correct password is entered.\n   */\n  goToAdminHome() {\n    if (this.passwordInput === \"Squash88\") {\n      this.navCtrl.push(AdminHomePage);\n    }\n    else {\n      let addTodoAlert = this.alertController.create({\n        title: \"Warning!\",\n        message: \"Incorrect Password\",\n      });\n      addTodoAlert.present();\n    }\n  }\n\n  /**\n   * Method returns user to the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/admin.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminHomePage } from '../admin-home/admin-home';\nimport { Graph1Page } from '../graph1/graph1';\nimport { Graph2Page } from '../graph2/graph2';\nimport { Graph3Page } from '../graph3/graph3';\nimport { Graph4Page } from '../graph4/graph4';\nimport { GraphScatter1Page } from '../graph-scatter1/graph-scatter1';\nimport { GraphScatter2Page } from '../graph-scatter2/graph-scatter2';\nimport { GraphScatter3Page } from '../graph-scatter3/graph-scatter3';\nimport { GraphScatter4Page } from '../graph-scatter4/graph-scatter4';\nimport { GraphScatter5Page } from '../graph-scatter5/graph-scatter5';\nimport { GraphPie2Page } from '../graph-pie2/graph-pie2';\nimport { GraphPie3Page } from '../graph-pie3/graph-pie3';\nimport { GraphPie4Page } from '../graph-pie4/graph-pie4';\nimport { GraphPie5Page } from '../graph-pie5/graph-pie5';\nimport { GraphBar1Page } from '../graph-bar1/graph-bar1';\nimport { GraphBar2Page } from '../graph-bar2/graph-bar2';\nimport { GraphBar3Page } from '../graph-bar3/graph-bar3';\nimport { GraphBar4Page } from '../graph-bar4/graph-bar4';\nimport { GraphBar5Page } from '../graph-bar5/graph-bar5';\nimport { Storage } from '@ionic/storage';\n\n\n\n@Component({\n  selector: 'page-admin-visitor-data',\n  templateUrl: 'admin-visitor-data.html',\n})\n\nexport class AdminVisitorDataPage {\n\n  toggled: boolean = false;\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n  }\n\n\n  /**\n   * Method returns the administrator to the homepage, effectively 'logging' them out.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * Method returns admin to the admin homepage\n   */\n  goToAdminHome() {\n    this.navCtrl.push(AdminHomePage);\n  }\n\n\n  /**\n   * Methods for Graph 1\n   */\n  goToGraph1() {\n    this.navCtrl.push(Graph1Page);\n  }\n\n  goToGraph2() {\n    this.navCtrl.push(Graph2Page);\n  }\n\n  goToGraph4() {\n    this.navCtrl.push(Graph4Page);\n  }\n\n\n  /**\n   * Methods for Graph 2\n   */\n  goToGraphScatter1() {\n    this.navCtrl.push(GraphScatter1Page);\n  }\n  goToGraph3() {\n    this.navCtrl.push(Graph3Page);\n  }\n  goToGraphBar1() {\n    this.navCtrl.push(GraphBar1Page);\n  }\n\n  /**\n   * Methods for Graph 3\n   */\n  goToGraphScatter2() {\n    this.navCtrl.push(GraphScatter2Page);\n  }\n  goToGraphPie2() {\n    this.navCtrl.push(GraphPie2Page);\n  }\n  goToGraphBar2() {\n    this.navCtrl.push(GraphBar2Page);\n  }\n\n  /**\n   * Methods for Graph 4\n   */\n  goToGraphScatter3() {\n    this.navCtrl.push(GraphScatter3Page);\n  }\n  goToGraphPie3() {\n    this.navCtrl.push(GraphPie3Page);\n  }\n  goToGraphBar3() {\n    this.navCtrl.push(GraphBar3Page);\n  }\n\n  /**\n   * Methods for Graph 5\n   */\n  goToGraphScatter4() {\n    this.navCtrl.push(GraphScatter4Page);\n  }\n  goToGraphPie4() {\n    this.navCtrl.push(GraphPie4Page);\n  }\n  goToGraphBar4() {\n    this.navCtrl.push(GraphBar4Page);\n  }\n\n  /**\n   * Methods for Graph 6\n   */\n  goToGraphScatter5() {\n    this.navCtrl.push(GraphScatter5Page);\n  }\n  goToGraphPie5() {\n    this.navCtrl.push(GraphPie5Page);\n  }\n  goToGraphBar5() {\n    this.navCtrl.push(GraphBar5Page);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin-visitor-data/admin-visitor-data.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 193;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 193\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Register1Page } from '../register1/register1';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'page-register0',\n  templateUrl: 'register0.html'\n})\nexport class Register0Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, private alertController: AlertController, private storage: Storage) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n  }\n\n  /**\n   * This method takes the user back to the HomePage page.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n  /**\n   * This method takes the user to the previous page. \n   */\n  goBack() {\n    this.navCtrl.pop();\n  }\n  /**\n   * This method takes the user to the Register1Page page. \n   */\n  goRegister1() {\n    this.navCtrl.push(Register1Page);\n\n\n  }\n  /**\n   * This method displays an alert message. \n   */\n  Not16() {\n    let addTodoAlert = this.alertController.create({\n      title: \"Warning\",\n      message: \"You have to be at least 16 years old to register. Please contact a member of staff\",\n    });\n    addTodoAlert.present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register0/register0.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Register2Page } from '../register2/register2';\nimport { ShareProvider } from '../../providers/share/share';\nimport { Storage } from '@ionic/storage';\nimport { Http } from '@angular/http';\n\n\n\n@Component({\n    selector: 'page-register1',\n    templateUrl: 'register1.html'\n})\nexport class Register1Page {\n    firstNameInput = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    showList: boolean = false;\n    items: string[];\n\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n     * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n     */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n\n    }\n\n    /**\n     * This method deletes the last user entry and takes the user to the previous page.\n     */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('first_name');\n        this.navCtrl.pop();\n    }\n\n    /**\n     * This method registers the user input in the registration_info object in the share.ts file and takes the user to the next page. \n     */\n    public goRegister2() {\n\n        if (this.firstNameInput) {\n            this.shareprovider.updateRegistrationInfo('first_name', this.firstNameInput);\n            console.log(this.shareprovider.getRegistrationInfo());\n\n\n            this.navCtrl.push(Register2Page);\n\n        } else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please enter your First Name\",\n            });\n            addTodoAlert.present();\n        }\n\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register1/register1.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Register3Page } from '../register3/register3';\nimport { ShareProvider } from '../../providers/share/share';\nimport { Storage } from '@ionic/storage';\nimport { Http } from '@angular/http';\n\n\n\n@Component({\n    selector: 'page-register2',\n    templateUrl: 'register2.html'\n})\nexport class Register2Page {\n    lastNameInput = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    showList: boolean = false;\n    items: string[];\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n\n    onEnter() {\n        this.setName(this.items[0]);\n    }\n\n    setName(item: string) {\n        console.log(item);\n        this.lastNameInput = item;\n        this.showList = false;\n    }\n\n    /**\n         * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n         */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method deletes the last user entry and takes the user to the previous page.\n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('first_name');\n        this.navCtrl.pop();\n    }\n\n    /**\n     * This method registers the user input in the registration_info object in the share.ts file and takes the user to the next page. \n     */\n    public goRegister3() {\n        if (this.lastNameInput) {\n            this.shareprovider.updateRegistrationInfo('last_name', this.lastNameInput);\n            console.log(this.shareprovider.getRegistrationInfo());\n\n\n            this.navCtrl.push(Register3Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please enter your Last Name\",\n            });\n            addTodoAlert.present();\n        }\n\n\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register2/register2.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Register4Page } from '../register4/register4';\nimport { ShareProvider } from '../../providers/share/share';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-register3',\n    templateUrl: 'register3.html'\n})\nexport class Register3Page {\n    emailInput = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n     * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n     */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method deletes the last user entry and takes the user to the previous page.\n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('last_name');\n        this.navCtrl.pop();\n    }\n\n    /**\n     * This method registers the user input in the registration_info object in the share.ts file and takes the user to the next page. \n     */\n    public goRegister4() {\n        if (this.emailInput) {\n            if (this.emailInput.includes(\"@\")) {\n                this.shareprovider.updateRegistrationInfo('email_address', this.emailInput);\n                console.log(this.shareprovider.getRegistrationInfo());\n\n                this.navCtrl.push(Register4Page);\n            }\n            else {\n                let addTodoAlert = this.alertController.create({\n                    title: \"Warning!!\",\n                    message: \"Please a valid email address\",\n                });\n                addTodoAlert.present();\n            }\n\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please enter your email address\",\n            });\n            addTodoAlert.present();\n        }\n\n\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register3/register3.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Register5Page } from '../register5/register5';\nimport { ShareProvider } from '../../providers/share/share';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-register4',\n    templateUrl: 'register4.html'\n})\nexport class Register4Page {\n    telInput = '';\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n     * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n     */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method deletes the last user entry and takes the user to the previous page.\n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('email_address');\n\n        this.navCtrl.pop();\n    }\n\n    /**\n     * This method registers the user input in the registration_info object in the share.ts file and takes the user to the next page. \n     */\n    public goRegister5() {\n        if (this.telInput) {\n            if (this.telInput.length > 0) {\n                this.shareprovider.updateRegistrationInfo('phone_number', this.telInput);\n                console.log(this.shareprovider.getRegistrationInfo());\n\n\n                this.navCtrl.push(Register5Page);\n            }\n            else {\n                let addTodoAlert = this.alertController.create({\n                    title: \"Warning!!\",\n                    message: \"Please enter a telephone number, for example: 07123456789\",\n                });\n                addTodoAlert.present();\n\n            }\n        } else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please enter your telephone number\",\n            });\n            addTodoAlert.present();\n        }\n\n\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register4/register4.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { ShareProvider } from '../../providers/share/share';\nimport { Register6Page } from '../register6/register6';\nimport { Storage } from '@ionic/storage';\n\nimport { Http } from '@angular/http';\n\n\n@Component({\n    selector: 'page-register5',\n    templateUrl: 'register5.html'\n})\nexport class Register5Page {\n    addressInput = '';\n    postcodeInput = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n     * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n     */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method deletes the last user entry and takes the user to the previous page.\n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('phone_number');\n        this.navCtrl.pop();\n    }\n\n\n\n\n    /**\n         * This method registers the user input in the registration_info object in the share.ts file and takes the user to the next page. \n         */\n    public goRegister6() {\n        if (this.addressInput && this.postcodeInput) {\n            this.shareprovider.updateRegistrationInfo('address', this.addressInput);\n            this.shareprovider.updateRegistrationInfo('postcode', this.postcodeInput);\n            console.log(this.shareprovider.getRegistrationInfo());\n            // register account\n\n            this.navCtrl.push(Register6Page);\n        } else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please enter both address and postcode\",\n            });\n            addTodoAlert.present();\n        }\n\n\n    }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register5/register5.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { ShareProvider } from '../../providers/share/share';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Questionnaire1Page } from '../questionnaire1/questionnaire1';\nimport { Http } from '@angular/http';\n\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-register6',\n    templateUrl: 'register6.html'\n})\nexport class Register6Page {\n    emergency_name = '';\n    emergency_telephone = '';\n    emergency_relationship = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private dbProvider: sqlitedatabase\n        , private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n     * This method resets the registration_info object in the share.ts file and takes the user to the HomepagePage page. \n     */\n    goToHomepage() {\n        this.shareprovider.resetRegistration();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method deletes the last user entry and takes the user to the previous page.\n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('address');\n        this.shareprovider.deleteItemFromRegistration('postcode');\n        this.navCtrl.pop();\n\n    }\n\n    /**\n     * This method adds the elements of the registration_info object in the share.ts file where the registration data is temporarly stored to the sutton_user SQLite table.\n     */\n    private registerAccount() {\n        console.log(this.shareprovider.getRegistrationInfo());\n\n        this.dbProvider.registerUser(this.shareprovider.getRegistrationInfo())\n            .then((data) => {\n                console.log(\"registered output data:\" + JSON.stringify(data));\n                console.log(\"id: \" + data.insertId);\n                this.showAlert(\"Success\", \"Registration is successful. Id:\" + data.insertId);\n                this.shareprovider.setUserId(data.insertId);\n            }).catch(e => {\n                this.showAlert(\"Failure\", \"Something went wrong on registering user\");\n                console.log(e)\n            });;\n    }\n\n    /**\n     * This method registers the user input in the registration_info object in the share.ts file adds all the elements of the object to the sutton_user SQLite table (through the registerAccount() method) and takes the user to the next page. \n     */\n    public goRegister7() {\n        if (this.emergency_name && this.emergency_telephone && this.emergency_relationship) {\n            this.shareprovider.updateRegistrationInfo('emergency_name', this.emergency_name);\n            this.shareprovider.updateRegistrationInfo('emergency_telephone', this.emergency_telephone);\n            this.shareprovider.updateRegistrationInfo('emergency_relationship', this.emergency_relationship);\n            console.log(this.shareprovider.getRegistrationInfo());\n            // register account\n            this.registerAccount();\n\n\n            this.navCtrl.push(Questionnaire1Page);\n        } else {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning\",\n                message: \"Please complete all three fields\",\n            });\n            addTodoAlert.present();\n        }\n\n\n    }\n\n    showAlert(title, message) {\n        let alert = this.alertController.create({\n            title: title,\n            message: message,\n        });\n        alert.present();\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register6/register6.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire2Page } from '../questionnaire2/questionnaire2';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\nimport { ShareProvider } from '../../providers/share/share';\n\n@Component({\n    selector: 'page-questionnaire1',\n    templateUrl: 'questionnaire1.html'\n\n\n})\nexport class Questionnaire1Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        'Outdoors:  Growing and harvesting',\n        'Indoors: Portioning and packing vegetables',\n        'DIY annd improving infrastructure',\n        'Supporting others (social/therapeutic horticulture)',\n        'Supporting events and markets',\n        'Other',\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private shareprovider: ShareProvider,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(1)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(Questionnaire2Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n    * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n    */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.shareprovider.deleteItemFromRegistration('emergency_name');\n        this.shareprovider.deleteItemFromRegistration('emergency_telephone');\n        this.shareprovider.deleteItemFromRegistration('emergency_relationship');\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire1/questionnaire1.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire3Page } from '../questionnaire3/questionnaire3';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire2',\n    templateUrl: 'questionnaire2.html'\n\n\n})\nexport class Questionnaire2Page {\n\n    choices: string[] = [\n        'To learn new skills',\n        'To meet people',\n        'For exercise',\n        'For enjoyment',\n        'To do something different',\n        'To improve my mental wellbeing',\n        'Other',\n    ];\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(2)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(Questionnaire3Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire2/questionnaire2.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire4Page } from '../questionnaire4/questionnaire4';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-questionnaire3',\n    templateUrl: 'questionnaire3.html',\n})\nexport class Questionnaire3Page {\n\n    choices: string[] = [\n        'I often take the initiative and enjoy having responsibility',\n        'Some tasks may not be appropriate for me (e.g. delicate jobs, very hard labour)',\n        'I am comfortable working independently with minimal instruction',\n        'Once I build my confidence and knowledge, I am able to work independently with minimal instruction',\n        'I would always like to work with someone who can support me',\n        'I need one-to-one support at all times'\n    ];\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private sqlitedatabase: sqlitedatabase,\n        private alertController: AlertController,\n        private storage: Storage) {\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(3)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) { return all_choices[i]; }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n\n\n            this.navCtrl.push(Questionnaire4Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user to the previous page and deletes the his/hers last answer input. \n     */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire3/questionnaire3.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire6Page } from '../questionnaire6/questionnaire6';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire4',\n    templateUrl: 'questionnaire4.html',\n})\nexport class Questionnaire4Page {\n\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public navCtrl: NavController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getQuestion();\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(4)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        this.sqlitedatabase.addToAnswerCache(this.question_id, [this.response_text]);\n        this.sqlitedatabase.logAnswerCache();\n\n        this.navCtrl.push(Questionnaire6Page);\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire4/questionnaire4.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire7Page } from '../questionnaire7/questionnaire7';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire6',\n    templateUrl: 'questionnaire6.html',\n})\nexport class Questionnaire6Page {\n\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public navCtrl: NavController,\n        private sqlitedatabase: sqlitedatabase,\n\n        private storage: Storage) {\n        this.getQuestion();\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(5)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        this.sqlitedatabase.addToAnswerCache(this.question_id, [this.response_text]);\n        this.sqlitedatabase.logAnswerCache();\n\n        this.navCtrl.push(Questionnaire7Page);\n    }\n\n    /**\n * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire6/questionnaire6.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire9Page } from '../questionnaire9/questionnaire9';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire7',\n    templateUrl: 'questionnaire7.html'\n\n\n})\nexport class Questionnaire7Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        'Yes',\n        'No',\n        'Not sure yet',\n        'Other'\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(6)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n\n            this.navCtrl.push(Questionnaire9Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n\n\n\n    /**\n * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire7/questionnaire7.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire10Page } from '../questionnaire10/questionnaire10';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire9',\n    templateUrl: 'questionnaire9.html'\n\n\n})\nexport class Questionnaire9Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        'I don\\'t mind',\n        'No thank you'\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(7)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) { return all_choices[i]; }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(Questionnaire10Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n  * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n  */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire9/questionnaire9.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Questionnaire11Page } from '../questionnaire11/questionnaire11';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-questionnaire10',\n    templateUrl: 'questionnaire10.html',\n})\nexport class Questionnaire10Page {\n\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n    constructor(public navCtrl: NavController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n        this.getQuestion();\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(8)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        this.sqlitedatabase.addToAnswerCache(this.question_id, [this.response_text]);\n        this.sqlitedatabase.logAnswerCache();\n        //this.sqlitedatabase.insertCachedAnswers(0);\n        this.navCtrl.push(Questionnaire11Page);\n    }\n\n    /**\n * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire10/questionnaire10.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { ShareProvider } from '../../providers/share/share';\nimport { DiversityQuestionnaire0Page } from '../diversity-questionnaire0/diversity-questionnaire0'\n\nimport { Storage } from '@ionic/storage';\n@Component({\n    selector: 'page-questionnaire11',\n    templateUrl: 'questionnaire11.html'\n\n\n})\nexport class Questionnaire11Page {\n\n    choices: string[] = [\n        'Wednesday',\n        'Thursday Morning',\n        'Saturdays (fortnighlty/monthly)',\n        'Other'\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private shareProvider: ShareProvider,\n        private storage: Storage) {\n\n        this.getQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n\n    }\n\n    /**\n * This method retrieves the question data for the particular registration questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getQuestion() {\n        this.sqlitedatabase.getQuestion(9)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToAnswerCache(this.question_id, selected);\n            this.sqlitedatabase.logAnswerCache();\n\n            let user_id = this.shareProvider.getUserId();\n            this.sqlitedatabase.insertCachedAnswers(user_id);\n\n            let successAlert = this.alertController.create({\n                message: \"Thank you for filling up the questionnaires.\\\n                 Your responses are carefully saved.\"\n            });\n            successAlert.present();\n            this.navCtrl.push(DiversityQuestionnaire0Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the answerCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetAnswerCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearAnswerCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionnaire11/questionnaire11.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { DiversityQuestionnaire1Page } from '../diversity-questionnaire1/diversity-questionnaire1';\nimport { LoginPage } from '../login/login';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'page-diversity-questionnaire0',\n  templateUrl: 'diversity-questionnaire0.html',\n})\nexport class DiversityQuestionnaire0Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n  }\n\n\n  /**\n   * This method takes the user to the DiversityQuestionnaire1Page page.\n   */\n  goToDiversityQuestionnaire1() {\n    this.navCtrl.push(DiversityQuestionnaire1Page);\n  }\n\n  /**\n   * This method takes the user to the HomepagePage page.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n * This method takes the user to the LoginPage page.\n */\n  goBack() {\n    this.sqlitedatabase.clearAnswerCache(9);\n    this.navCtrl.push(LoginPage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire0/diversity-questionnaire0.ts","import { DiversityQuestionnaire2Page } from '../diversity-questionnaire2/diversity-questionnaire2';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire1',\n    templateUrl: 'diversity-questionnaire1.html',\n})\n\n\nexport class DiversityQuestionnaire1Page {\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        \"16-24 years\", \"25-44 years\", \"45-64  years\", \"65 years or over\"\n    ];\n\n    responses: boolean[];\n\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n     * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n     */\n    getDiversityQuestion() {\n        console.log(\"function called\")\n        this.sqlitedatabase.getDiversityQuestion(1)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n     * This method registers the user answers and takes the user to the next page. \n     */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) { return all_choices[i]; }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire2Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user to the previous page and deletes the his/hers last answer input. \n     */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}      \n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire1/diversity-questionnaire1.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { DiversityQuestionnaire3Page } from '../diversity-questionnaire3/diversity-questionnaire3';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AlertController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire2',\n    templateUrl: 'diversity-questionnaire2.html',\n})\nexport class DiversityQuestionnaire2Page {\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        \"Female\", \"Male\", \"Other\"\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n           * This is the logic that assigns the desired background, chosen in\n           * admin-app-settings.ts, to the background of the current page.\n           */\n        var promise1 = this.storage.get('wallpaperToggle');\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n     * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n     */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(2)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n     * This method registers the user answers and takes the user to the next page. \n     */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire3Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user to the previous page and deletes the his/hers last answer input. \n     */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}      \n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire2/diversity-questionnaire2.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { DiversityQuestionnaire4Page } from '../diversity-questionnaire4/diversity-questionnaire4';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire3',\n    templateUrl: 'diversity-questionnaire3.html',\n})\nexport class DiversityQuestionnaire3Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        \"Bisexual\", \"Gay Man\", \"Heterosexual\", \"Lesbian or gay woman\", \"Prefer not to say\", \"Other\"\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n\n        /**\n         * This is the logic that assigns the desired background, chosen in\n         * admin-app-settings.ts, to the background of the current page.\n         */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n   * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n   */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(3)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n   * This method registers the user answers and takes the user to the next page. \n   */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire4Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n   * This method takes the user to the previous page and deletes the his/hers last answer input. \n   */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire3/diversity-questionnaire3.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { DiversityQuestionnaire5Page } from '../diversity-questionnaire5/diversity-questionnaire5';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AlertController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire4',\n    templateUrl: 'diversity-questionnaire4.html',\n})\nexport class DiversityQuestionnaire4Page {\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n    choices: string[] = [\n        \"Asian or Asian British\", \"Black or Black British\", \"Mixed background\", \"Other ethnic group\", \"White or White British\", \"Prefer not to say\", \"Other\"\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n         * This is the logic that assigns the desired background, chosen in\n         * admin-app-settings.ts, to the background of the current page.\n         */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n   * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n   */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(4)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n   * This method registers the user answers and takes the user to the next page. \n   */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire5Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n    * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n    */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n   * This method takes the user to the previous page and deletes the his/hers last answer input. \n   */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire4/diversity-questionnaire4.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { DiversityQuestionnaire6Page } from '../diversity-questionnaire6/diversity-questionnaire6';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire5',\n    templateUrl: 'diversity-questionnaire5.html',\n})\nexport class DiversityQuestionnaire5Page {\n\n\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n\n    choices: string[] = [\n        \"Yes\", \"No\"\n    ];\n\n    responses: boolean[];\n\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n\n        /**\n            * This is the logic that assigns the desired background, chosen in\n            * admin-app-settings.ts, to the background of the current page.\n            */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n    }\n\n    /**\n     * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n     */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(5)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n     * This method registers the user answers and takes the user to the next page. \n     */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) { return all_choices[i]; }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire6Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user to the previous page and deletes the his/hers last answer input. \n     */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}      \n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire5/diversity-questionnaire5.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { DiversityQuestionnaire7Page } from '../diversity-questionnaire7/diversity-questionnaire7';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire6',\n    templateUrl: 'diversity-questionnaire6.html',\n})\nexport class DiversityQuestionnaire6Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n    choices: string[] = [\n        \"Yes\", \"No\"\n    ];\n\n    responses: boolean[];\n\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n     * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n     */\n\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(6)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n     * This method registers the user answers and takes the user to the next page. \n     */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) { return all_choices[i]; }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire7Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    /**\n     * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n     */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user to the previous page and deletes the his/hers last answer input. \n     */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}      \n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire6/diversity-questionnaire6.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { DiversityQuestionnaire8Page } from '../diversity-questionnaire8/diversity-questionnaire8';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AlertController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n\n@Component({\n    selector: 'page-diversity-questionnaire7',\n    templateUrl: 'diversity-questionnaire7.html',\n})\nexport class DiversityQuestionnaire7Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    choices: string[] = [\n        \"Atheist/no religious belief\", \"Buddhist\", \"Chrsitian\", \"Hindu\", \"Jewish\", \"Muslim\", \"Secular beliefs\", \"Sikh\", \"Prefer not to say\", \"Other\"\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n        * This is the logic that assigns the desired background, chosen in\n        * admin-app-settings.ts, to the background of the current page.\n        */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n   * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n   */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(7)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n   * This method registers the user answers and takes the user to the next page. \n   */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire8Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    selectOnly(i: number) {\n        console.log(\"selected number index:\" + i);\n        this.responses = this.responses.map(function (x, index) { return i == index; });\n    }\n\n    /**\n   * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n   */\n    goToHomepage() {\n        this.sqlitedatabase.resetDiversityCache();\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n   * This method takes the user to the previous page and deletes the his/hers last answer input. \n   */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire7/diversity-questionnaire7.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { DiversityQuestionnaire9Page } from '../diversity-questionnaire9/diversity-questionnaire9';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AlertController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire8',\n    templateUrl: 'diversity-questionnaire8.html',\n})\nexport class DiversityQuestionnaire8Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n\n    choices: string[] = [\n        \"Working full or part time\", \"Unemployed\", \"Not working - due to health issues/disability\", \"Not working  - looking after house/children\", \"Not working - Retired\", \"Student\", \"Self-employed\", \"Other\"\n    ];\n\n    responses: boolean[];\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n        this.responses = this.choices.map(function (x, i) { return false; })\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle');\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(8)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n * This method registers the user answers and takes the user to the next page. \n */\n    goNext() {\n        if (this.responses.indexOf(true) > -1) {\n            let all_choices = this.choices;\n            let input_text = this.response_text;\n            console.log(\"responses:\" + this.responses);\n            let selected = this.responses\n                .map(function (x, i) {\n                    if (x) {\n                        if (i < all_choices.length - 1)\n                            return all_choices[i];\n                        else\n                            return input_text;\n                    }\n                }).filter(function (x, i) { return x != null; });\n            console.log(\"selected:\" + selected);\n            this.sqlitedatabase.addToDiversityCache(this.question_id, selected);\n            this.sqlitedatabase.logDiversityCache();\n\n            //this.sqlitedatabase.insertCachedAnswers(0);\n\n            this.navCtrl.push(DiversityQuestionnaire9Page);\n        }\n        else {\n            let addTodoAlert = this.alertController.create({\n                message: \"Please select at least one option\"\n            });\n            addTodoAlert.present();\n        }\n    }\n\n    selectOnly(i: number) {\n        console.log(\"selected number index:\" + i);\n        this.responses = this.responses.map(function (x, index) { return i == index; });\n    }\n\n    /**\n * This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n */\n    goToHomepage() {\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n * This method takes the user to the previous page and deletes the his/hers last answer input. \n */\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire8/diversity-questionnaire8.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n    selector: 'page-diversity-questionnaire9',\n    templateUrl: 'diversity-questionnaire9.html',\n})\nexport class DiversityQuestionnaire9Page {\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n\n    response_text = '';\n\n    question_id: number = 0;\n    question_text: string = '';\n\n\n    constructor(public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n        this.getDiversityQuestion();\n\n        /**\n          * This method retrieves the login history from the SQLite database.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n\n    }\n\n    /**\n * This method retrieves the question data for the particular diversity questionnaire question and sets the question_id and question_text variables with the relevant data. \n */\n    getDiversityQuestion() {\n        this.sqlitedatabase.getDiversityQuestion(9)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return;\n                }\n                if (data.rows.length > 0) {\n                    this.question_id = data.rows.item(0).id;\n                    this.question_text = data.rows.item(0).question_text;\n                    console.log('question:' + this.question_text);\n                }\n            }, err => {\n                console.log('Error: ', err);\n            });\n    }\n\n    /**\n* This method registers the user answers, inserts all the user answers into the local database, displays the registered data in the console and takes the user to the HomePage page. \n*/\n    goNext() {\n        this.sqlitedatabase.addToDiversityCache(this.question_id, [this.response_text])\n        this.sqlitedatabase.logDiversityCache();\n        this.sqlitedatabase.insertDiversityCache();\n\n\n        let successAlert = this.alertController.create({\n            message: \"Thank you for filling up the questionnaires.\\\n             Your responses are carefully saved.\"\n        });\n        successAlert.present();\n        this.navCtrl.push(HomepagePage);\n\n    }\n\n\n    /**\n* This method takes the user to the HomepagePage page and resets the diversityCache object in the sqlitedatabase.ts file. \n*/\n    goToHomepage() {\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n* This method takes the user to the previous page and deletes the his/hers last answer input. \n*/\n    goBack() {\n        this.sqlitedatabase.clearDiversityCache(this.question_id - 1);\n        this.navCtrl.pop();\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/diversity-questionnaire9/diversity-questionnaire9.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n    selector: 'page-logout',\n    templateUrl: 'logout.html'\n})\nexport class LogoutPage {\n    logoutText = 'Logout';\n    lastNameInput = '';\n\n    showList: boolean = false;\n    items: any;\n    selectedItem: any;\n\n    wallpaperID: string;\n    winter: boolean = true; //default\n    summer: boolean = false;\n    autumn: boolean = false;\n    spring: boolean = false;\n\n    constructor(public http: Http,\n        public navCtrl: NavController,\n        private alertController: AlertController,\n        private sqlitedatabase: sqlitedatabase,\n        private storage: Storage) {\n\n        /**\n          * This is the logic that assigns the desired background, chosen in\n          * admin-app-settings.ts, to the background of the current page.\n          */\n        var promise1 = this.storage.get('wallpaperToggle'); //\n        promise1.then(wallpaperID => {\n            console.log(wallpaperID);\n\n            if (wallpaperID == \"autumn\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = true;\n                this.spring = false;\n            } else if (wallpaperID == \"summer\") {\n                this.winter = false;\n                this.summer = true;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"winter\") {\n                this.winter = true;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = false;\n            } else if (wallpaperID == \"spring\") {\n                this.winter = false;\n                this.summer = false;\n                this.autumn = false;\n                this.spring = true;\n            }\n\n        });\n        this.autoLogoutUser();\n    }\n\n    /**\n     * This method is activated by entering the current page, therefore needs to be two scenarios for execution:\n     * 1) The auto-logout is executed on the same day as the volunteer's login but after the time\n     * that the farm shuts.\n     * 2) The auto-logout is executed after the day on which the volunteer logged in.\n     */\n    autoLogoutUser() {\n        this.sqlitedatabase.listDetailsForAutoLogout()\n            .then((stats) => {\n                var d = new Date(); //Gives the current time and date\n                var currentTimeMS = d.getTime();\n\n                for (var j = 0; j < stats.length; j++) {\n                    //Below gives us the date to compare\n                    var handledTotalDate = new Date(stats[j].login_time);\n                    var handledYear = handledTotalDate.getFullYear();\n                    var handledMonth = handledTotalDate.getMonth(); //Month in date format is 0-11\n                    var handledDate = handledTotalDate.getDate();\n\n                    var logoutTime = new Date(stats[j].logout_time); //Finds if the logout time exists\n\n                    if (logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (GMT)\" || logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (BST)\") {\n                        var logoutBoolean = 0; //If logout time is null, given date Thu Jan 01 1970...\n                    } else {\n                        logoutBoolean = 1;\n                    }\n\n                    //Creates a logout date on the same day as the login data for 17:00\n                    var dateToSet = new Date();\n                    dateToSet.setDate(handledDate);\n                    dateToSet.setFullYear(handledYear);\n                    dateToSet.setMonth(handledMonth);\n                    dateToSet.setHours(16);\n                    dateToSet.setMinutes(30, 0, 0);\n\n                    console.log(\"Date to set: \" + dateToSet);\n                    var dateToSetMS = dateToSet.getTime();\n\n                    console.log(\"Time to set: \" + dateToSetMS);\n                    var reverseDateTest = new Date(dateToSetMS);\n                    console.log(\"Reverse test: \" + reverseDateTest);\n\n                    //Logs the user out if it finds the value of logoutBoolean = 0\n                    if (currentTimeMS > dateToSetMS && logoutBoolean === 0) {\n                        //Logout user at 17:00 of current date, if it is passed that time on the same day\n                        this.sqlitedatabase.autoLogout(stats[j].user_id, dateToSetMS)\n                            .then(() => {\n\n                            }, err => {\n                                console.log('Error1: ', err);\n                            });\n                    } else {\n                        console.log(\"Already logged out\");\n                    }\n\n\n                }\n            }\n            , err => {\n                console.log(\"something went wrong on auto-logging out users\");\n            });\n    }\n\n    /**\n     * This method retrieves the name suggestions from the local database. It querries the sutton_user table for users who's last name has some similarity to the \n     * input lastname in the text input box. \n     * @param ev \n     */\n    getItems(ev: any) {\n        this.logoutText = \"Logout\";\n        // set val to the value of the searchbar\n        let val = ev.target.value || '';\n\n        // populate the list from database\n        this.sqlitedatabase.suggestLastName(val)\n            .then((data) => {\n                if (data == null) {\n                    console.log(\"no data in table\");\n                    return [];\n                }\n\n                this.items = [];\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        this.items.push({\n                            id: data.rows.item(i).id,\n                            first_name: data.rows.item(i).first_name,\n                            last_name: data.rows.item(i).last_name,\n                        });\n                    }\n\n                }\n                // Show the results\n                this.showList = true;\n\n            }, err => {\n                console.log('Error: ', err);\n                return [];\n            });\n\n        // hide the results when the query is empty\n        this.showList = false;\n    }\n\n\n    onEnter() {\n        this.setSelection(this.items[0]);\n    }\n\n    /**\n     * This method takes the selected name by the user and parses it to the logout button so that the user's name is displayed on the button.\n     * @param item \n     */\n    setSelection(item: any) {\n        console.log(item);\n        this.selectedItem = item;\n        this.lastNameInput = item.last_name;\n        this.showList = false;\n        this.logoutText = \"Logout (\" + item.first_name + \" \" + item.last_name + \")\";\n    }\n\n    /**\n     * This method is called when the logout button is clicked. It  registers the logout times stamp of the user into the login_history table. \n     *  It then informs the user of the success status of the operation through an alert message.\n     *  Only logged-in users can be logged out. If a not logged-in user tries to logout he will be prompted with an alert message. \n     */\n    logoutFromApp() {\n        if (this.selectedItem == undefined || this.selectedItem.id == undefined) {\n            let addTodoAlert = this.alertController.create({\n                title: \"Warning!!\",\n                message: \"Please select your name to logout\",\n            });\n            addTodoAlert.present();\n        } else {\n            this.sqlitedatabase.last_login(this.selectedItem.id)\n                .then((data) => {\n                    console.log(JSON.stringify(data));\n                    if (data.rows.length != 0 && data.rows.item(0).login_ts !== undefined) {\n                        if (data.rows.item(0).logout_ts == undefined) {\n                            this.sqlitedatabase.logout(this.selectedItem.id)\n                                .then(() => {\n                                    this.showLoginResponse(\"Logout successful.\");\n                                    // clear lastname\n                                    this.clearLogout();\n                                }, err => {\n                                    this.showLoginResponse(\"Logout failed.\");\n                                    console.log('Error1: ', err);\n                                });\n                        } else {\n                            this.showLoginResponse(\"Already logged out.\");\n                        }\n                    } else {\n                        this.showLoginResponse(\"Failed! You must be logged in to logout.\");\n                    }\n\n                }, err => {\n                    console.log('Error2: ', err);\n                    this.showLoginResponse(\"Logout failed\");\n                });\n        }\n    }\n\n    /**\n     * This method is called when a person logs out and shows an alert message with information that the logout was succesfull. \n     * @param response \n     */\n    showLoginResponse(response) {\n        let loginResultAlert = this.alertController.create({\n            title: \"Logout Response\",\n            message: response,\n        });\n        loginResultAlert.present();\n    }\n\n    /**\n     * This method clears the variables so that they can be used by the next user and resets the text of the logout button to 'Logout'\n     */\n    clearLogout() {\n        this.lastNameInput = '';\n        this.selectedItem = undefined;\n        this.logoutText = 'Logout';\n    }\n\n    /**\n     * This method takes the user back to the homepage.\n     * @param params \n     */\n    goToHomepage(params) {\n        if (!params) params = {};\n        this.navCtrl.push(HomepagePage);\n    }\n\n    /**\n     * This method takes the user back to the previous page which in this case is the homepage.\n     */\n    goBack() {\n        this.navCtrl.pop();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/logout/logout.ts","\n////////////////////////////////////////////////////////////////////////////////////////////////\n/*\nThis file share.ts is adapted from https://www.lynda.com/Ionic-tutorials/Ionic-3-0-Mobile-App-Developers/562260-2.html?srchtrk=index%3A1%0Alinktypeid%3A2%0Aq%3AIonic+3.0+for+Mobile+App+Developers%0Apage%3A1%0As%3Arelevance%0Asa%3Atrue%0Aproducttypeid%3A2\n\n\n*/\n////////////////////////////////////////////////////////////////////////////////////////////////\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ShareProvider {\n\n    private registration_info = {};\n    private user_id = 0;\n\n\n\n\n    constructor(public http: HttpClient) {\n        console.log('Hello ShareProvider Provider');\n    }\n\n\n    /**\n     * This method adds a key:value pair to the registration_info object. \n     * @param key \n     * @param value \n     */\n    updateRegistrationInfo(key, value) {\n        this.registration_info[key] = value;\n    }\n    /**\n     * This method returns the registrion_info object. \n     */\n    getRegistrationInfo() {\n        return this.registration_info;\n    }\n\n    /**\n     * This method returns the value of the user_id variable. \n     */\n    getUserId() {\n        return this.user_id;\n    }\n    /**\n     * This method sets the value of the user_id variable.\n     * @param user_id \n     */\n    setUserId(user_id) {\n        this.user_id = user_id;\n    }\n\n\n\n    /**\n     * This method deletes the elemet with key 'key' from the registration_info object\n     * @param key \n     */\n    deleteItemFromRegistration(key) {\n        delete this.registration_info[key];\n    }\n\n    /**\n     * This method resets the registrion_info object. \n     */\n    resetRegistration() {\n        this.registration_info = {};\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/share/share.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ModalController } from 'ionic-angular';\nimport { AdminHomePage } from '../admin-home/admin-home';\nimport { HomepagePage } from '../homepage/homepage';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'page-admin-app-settings',\n  templateUrl: 'admin-app-settings.html',\n})\nexport class AdminAppSettingsPage {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n  custom: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modalCtrl: ModalController, private storage: Storage) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AdminAppSettingsPage');\n  }\n\n  /**\n   * Method returns user to homepage\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * Method returns user to admin homepage\n   */\n  goToAdminHome() {\n    this.navCtrl.push(AdminHomePage);\n  }\n\n  /**\n   * Each of these functions is used to set the wallpaper for the entire app.\n   * This is achieved by setting the boolean variable, associated with the \n   * the desired wallpaper, to 'true'. All of the other boolean variables, which\n   * are associated with the other wallpapers are set to 'false'.\n   * */\n  springToggle() {\n    this.storage.remove('wallpaperToggle');\n    this.storage.set('wallpaperToggle', 'spring');\n\n    this.winter = false;\n    this.summer = false;\n    this.autumn = false;\n    this.spring = true;\n  }\n\n  summerToggle() {\n    this.storage.remove('wallpaperToggle');\n    this.storage.set('wallpaperToggle', 'summer');\n\n    this.winter = false;\n    this.summer = true;\n    this.autumn = false;\n    this.spring = false;\n  }\n\n  winterToggle() {\n    this.storage.remove('wallpaperToggle');\n    this.storage.set('wallpaperToggle', 'winter');\n\n    this.winter = true;\n    this.summer = false;\n    this.autumn = false;\n    this.spring = false;\n  }\n\n  autumnToggle() {\n    this.storage.remove('wallpaperToggle');\n    this.storage.set('wallpaperToggle', 'autumn');\n\n    this.winter = false;\n    this.summer = false;\n    this.autumn = true;\n    this.spring = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin-app-settings/admin-app-settings.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminHomePage } from '../admin-home/admin-home';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { File } from '@ionic-native/file';\nimport { Http } from '@angular/http';\nimport * as papa from 'papaparse';\nimport { PopoverController } from 'ionic-angular';\nimport { CsvDownloadsPage } from '../csv-downloads/csv-downloads';\n\n/**\n  * Creating a dynamic table from csv data is based on a tutorial from https://devdactic.com/csv-data-ionic/\n  */\n\n/**\n  * Downloading a csv file methodology is based on code from https://forum.ionicframework.com/t/downloading-files-in-ionic-using-cordova-plugin-file-transfer/42315\n  */\n\n/**\n  * Converting from JS Object arrays to a csv file methodology is based on code from https://stackoverflow.com/questions/8847766/how-to-convert-json-to-csv-format-and-store-in-a-variable\n  */\n\n\n\n/**\n  * Writing a text file of csv data and saving it methodology is based on code from https://forum.ionicframework.com/t/generate-download-a-csv-file-with-ionic/63104\n  */\n\n\n@Component({\n  selector: 'page-admin-visitor-history',\n  templateUrl: 'admin-visitor-history.html',\n\n})\nexport class AdminVisitorHistoryPage {\n\n  csvData: any[] = [];\n  headerRow: any[] = [];\n\n  constructor(public navCtrl: NavController, public popoverCtrl: PopoverController, public navParams: NavParams, private http: Http, private sqlitedatabase: sqlitedatabase, private File: File) {\n    this.autoLogoutUser();\n    this.csvFromDatabase();\n\n  }\n\n  /**\n   * Creates a window with options for downloading csv files containing: login data,\n   * questionnaire data and diversity questionnaire data.\n   * @param myEvent \n   */\n  presentPopover(myEvent) {\n    let popover = this.popoverCtrl.create(CsvDownloadsPage);\n    popover.present({\n      ev: myEvent\n    });\n  }\n\n  /**\n   * This method retrieves the login history from the SQLite database.\n   */\n  csvFromDatabase() {\n    this.sqlitedatabase.listLoginDetailsForTable()\n      .then((stats) => {\n\n        let arrayConverted = [];\n\n        for (var q = 0; q < stats.length; q++) {\n          var logoutTimeString = (stats[q].logout_time).toString();\n          var loginTimeString = (stats[q].login_time).toString();\n          var currentDateInfoArray = logoutTimeString.split(\" \");\n          var currentYear = currentDateInfoArray[3];\n          var year = 1970;\n\n          if (currentYear.toString() == year.toString()) {\n            var stillActiveString = 'Volunteer still active';\n\n            arrayConverted.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: stillActiveString\n            });\n          } else {\n\n            arrayConverted.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: logoutTimeString\n            });\n\n          }\n\n\n        }\n        // console.log(arrayConverted)\n        this.ConvertToCSV(arrayConverted);\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * This method converts the login history data to csv format.\n   */\n  ConvertToCSV(objArray) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    let row = \"\";\n    for (let index in objArray[0]) {\n      row += index + ',';\n    }\n    row = row.slice(0, -1);\n    str += row + '\\r\\n';\n\n    for (let i = array.length - 1; i >= 0; i--) {\n      let line = '';\n      for (let index in array[i]) {\n        if (line != '') line += ',';\n        line += array[i][index];\n      }\n      str += line + '\\r\\n';\n    }\n    this.saveFile(str);\n  }\n\n  /**\n   * This method saves the csv data to a file in a local directory.\n   */\n  saveFile(body) {\n    let fileName = \"dummyData.csv\"\n    this.File.writeFile(this.File.dataDirectory, fileName, body)\n      .then(\n      _ => {\n        console.log('Success ;-)' + this.File.dataDirectory)\n      }\n      )\n      .catch(\n      err => {\n\n        this.File.writeExistingFile(this.File.dataDirectory, fileName, body)\n          .then(\n          _ => {\n            console.log('Success ;-)2' + this.File.dataDirectory)\n          }\n          )\n          .catch(\n          err => {\n            console.log(err + 'Failure' + this.File.dataDirectory)\n          }\n          )\n      }\n      )\n    this.readCsvData();\n  }\n\n  /**\n   * This method extracts the csv data from the written file so that it can be parsed to a table.\n   */\n  private readCsvData() {\n    this.http.get(this.File.dataDirectory + 'dummyData.csv')\n      .subscribe(\n      data => this.extractData(data),\n      err => this.handleError(err)\n      );\n\n  }\n\n\n  /**\n   * This method sets up a dynamic table in the HTML file and parses the login data to it.\n   */\n  private extractData(res) {\n    let csvData = res['_body'] || '';\n    let parsedData = papa.parse(csvData).data;\n\n    // this.headerRow = parsedData[0];\n    this.headerRow = [\"First Name\", \"Last Name\", \"Email Address\", \"Login Time\", \"Logout Time\"];\n\n    parsedData.splice(0, 1);\n    this.csvData = parsedData;\n  }\n\n\n  private handleError(err) {\n    console.log('something went wrong: ', err);\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AdminVisitorHistoryPage');\n  }\n\n  /**\n   * This method opens the HomepagePage page.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method opens the AdminPage page.\n   */\n  goToAdminHome() {\n    this.navCtrl.push(AdminHomePage);\n  }\n\n\n  /**\n   * This method is activated by entering the current page, therefore needs to be two scenarios for execution:\n   * 1) The auto-logout is executed on the same day as the volunteer's login but after the time\n   * that the farm shuts.\n   * 2) The auto-logout is executed after the day on which the volunteer logged in.\n   */\n  autoLogoutUser() {\n    this.sqlitedatabase.listDetailsForAutoLogout()\n      .then((stats) => {\n        var d = new Date(); //Gives the current time and date\n        var currentTimeMS = d.getTime();\n\n        for (var j = 0; j < stats.length; j++) {\n          //Below gives us the date to compare\n          var handledTotalDate = new Date(stats[j].login_time);\n          var handledYear = handledTotalDate.getFullYear();\n          var handledMonth = handledTotalDate.getMonth(); //Month in date format is 0-11\n          var handledDate = handledTotalDate.getDate();\n\n          var logoutTime = new Date(stats[j].logout_time); //Finds if the logout time exists\n\n          if (logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (GMT)\") {\n            var logoutBoolean = 0; //If logout time is null, given date Thu Jan 01 1970...\n          } else {\n            logoutBoolean = 1;\n          }\n\n          //Creates a logout date on the same day as the login data for 17:00\n          var dateToSet = new Date();\n          dateToSet.setDate(handledDate);\n          dateToSet.setFullYear(handledYear);\n          dateToSet.setMonth(handledMonth);\n          dateToSet.setHours(16);\n          dateToSet.setMinutes(30, 0, 0);\n\n          console.log(\"Date to set: \" + dateToSet);\n          var dateToSetMS = dateToSet.getTime();\n\n          console.log(\"Time to set: \" + dateToSetMS);\n          var reverseDateTest = new Date(dateToSetMS);\n          console.log(\"Reverse test: \" + reverseDateTest);\n\n          //Logs the user out if it finds the value of logoutBoolean = 0\n          if (currentTimeMS > dateToSetMS && logoutBoolean === 0) {\n            //Logout user at 17:00 of current date, if it is passed that time on the same day\n            this.sqlitedatabase.autoLogout(stats[j].user_id, dateToSetMS)\n              .then(() => {\n\n              }, err => {\n                console.log('Error1: ', err);\n              });\n          } else {\n            console.log(\"Already logged out\");\n          }\n\n\n        }\n      }\n      , err => {\n        console.log(\"something went wrong on auto-logging out users\");\n      });\n  }\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin-visitor-history/admin-visitor-history.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ViewController } from 'ionic-angular';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { File } from '@ionic-native/file';\nimport { AlertController } from 'ionic-angular';\n\n/**\n  * Downloading a csv file methodology is based on code from https://forum.ionicframework.com/t/downloading-files-in-ionic-using-cordova-plugin-file-transfer/42315\n  */\n\n/**\n  * Converting from JS Object arrays to a csv file methodology is based on code from https://stackoverflow.com/questions/8847766/how-to-convert-json-to-csv-format-and-store-in-a-variable\n  */\n\n/**\n  * Writing a text file of csv data and saving it methodology is based on code from https://forum.ionicframework.com/t/generate-download-a-csv-file-with-ionic/63104\n  */\n\n\n\n@Component({\n  template: `\n    <ion-list>\n      <ion-list-header> CSV Downloads </ion-list-header>\n      <button ion-item (click)=\"downloadCSV()\"> Login History\n      <ion-icon name=\"download\"></ion-icon> \n      </button>\n      <button ion-item (click)=\"getQuestionnaireResponses()\"> Questionnaire Responses \n      <ion-icon name=\"download\"></ion-icon>\n      </button>\n      <button ion-item (click)=\"getDiversityResponses()\"> Diversity Responses \n      <ion-icon name=\"download\"></ion-icon>\n      </button>\n\n    </ion-list>\n  `\n})\nexport class CsvDownloadsPage {\n\n  constructor(public viewCtrl: ViewController, public navCtrl: NavController, public navParams: NavParams, private sqlitedatabase: sqlitedatabase, private File: File, private alertCtrl: AlertController) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad CsvDownloadsPage');\n  }\n\n  /**\n   * This method allows the user to download a csv file of diversity questionnaire responses to the device's 'Downloads' folder.\n   */\n  getDiversityResponses() {\n    this.sqlitedatabase.listAllDiversity2()\n      .then((allStats) => {\n        var questionNumber;\n        var questionTextArray = [];\n        var questionText;\n        let questionnaireResults = [];\n\n        for (var z = 0; z < allStats.length; z++) {\n          questionNumber = (allStats[z].question_id);\n\n          this.sqlitedatabase.getDiversityQuestion(questionNumber)\n            .then((data) => {\n              if (data == null) {\n                console.log(\"no data in table\");\n                return;\n              }\n              var question_text;\n              if (data.rows.length > 0) {\n                questionNumber = data.rows.item(0).id;\n                question_text = data.rows.item(0).question_text;\n                questionText = question_text.toString();\n                questionTextArray.push(questionText);\n\n                if (questionTextArray.length === allStats.length) {\n\n                  for (var i = 0; i < allStats.length; i++) {\n                    questionnaireResults.push({\n                      question: questionTextArray[i],\n                      response: allStats[i].response,\n                      count: allStats[i].count\n                    });\n                  }\n                  console.log(\"Diversity questionnaire responses: \")\n                  console.log(questionnaireResults)\n\n                  let array = typeof questionnaireResults != 'object' ? JSON.parse(questionnaireResults) : questionnaireResults;\n                  let str = '';\n                  let row = \"\";\n                  for (let index in questionnaireResults[0]) {\n                    row += index + ',';\n                  }\n                  row = row.slice(0, -1);\n                  str += row + '\\r\\n';\n\n                  for (let i = array.length - 1; i >= 0; i--) {\n                    let line = '';\n                    for (let index in array[i]) {\n                      if (line != '') line += ',';\n                      line += array[i][index];\n                    }\n                    str += line + '\\r\\n';\n                  }\n\n                  //Every time a CSV of the data is downloaded, the file is given a name that includes the Date and Time so it can be uniquely identified    \n                  var d = new Date();\n                  var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '-' + d.getHours() + '-' + d.getMinutes() + '-' + d.getSeconds();\n                  let fileName = \"DiversityResponses\" + date.toString() + \".csv\";\n                  console.log(fileName);\n\n                  this.File.writeFile(this.File.externalRootDirectory + '/Download/', fileName, str)\n                    .then(\n                    _ => {\n                      let alert = this.alertCtrl.create({\n                        title: 'Download Success',\n                        subTitle: 'A .csv of the diversity form responses has been successfully exported to your Downloads folder',\n                        buttons: ['Continue']\n                      });\n                      alert.present();\n                    }\n                    )\n                    .catch(\n                    err => {\n\n                      this.File.writeExistingFile(this.File.dataDirectory, fileName, str)\n                        .then(\n                        _ => {\n                          let alert = this.alertCtrl.create({\n                            title: 'Download Success',\n                            subTitle: 'A .csv of the diversity form responses has been successfully exported to your Downloads folder',\n                            buttons: ['Continue']\n                          });\n                          alert.present();\n                        }\n                        )\n                        .catch(\n                        err => {\n                          console.log(err + 'Failure' + this.File.dataDirectory)\n                        }\n                        )\n                    }\n                    )\n\n                }\n              }\n\n            }, err => {\n              console.log('Error: ', err);\n            });\n\n        }\n\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving the diversity form responses\");\n      });\n\n  }\n\n  /**\n   * This method allows the user to download a csv file of questionnaire responses to the device's 'Downloads' folder.\n   */\n  getQuestionnaireResponses() {\n    this.sqlitedatabase.listAllStats2()\n      .then((allStats) => {\n        var questionNumber;\n        var questionTextArray = [];\n        var questionText;\n        let questionnaireResults = [];\n\n        for (var z = 0; z < allStats.length; z++) {\n          questionNumber = (allStats[z].question_id);\n\n          this.sqlitedatabase.getQuestion(questionNumber)\n            .then((data) => {\n              if (data == null) {\n                console.log(\"no data in table\");\n                return;\n              }\n              var question_text;\n              if (data.rows.length > 0) {\n                questionNumber = data.rows.item(0).id;\n                question_text = data.rows.item(0).question_text;\n                questionText = question_text.toString();\n                questionTextArray.push(questionText);\n\n                if (questionTextArray.length === allStats.length) {\n\n                  for (var i = 0; i < allStats.length; i++) {\n                    questionnaireResults.push({\n                      question: questionTextArray[i],\n                      response: allStats[i].response,\n                      count: allStats[i].count\n                    });\n                  }\n                  console.log(\"Questionnaire responses: \")\n                  console.log(questionnaireResults)\n\n                  let array = typeof questionnaireResults != 'object' ? JSON.parse(questionnaireResults) : questionnaireResults;\n                  let str = '';\n                  let row = \"\";\n                  for (let index in questionnaireResults[0]) {\n                    row += index + ',';\n                  }\n                  row = row.slice(0, -1);\n                  str += row + '\\r\\n';\n\n                  for (let i = array.length - 1; i >= 0; i--) {\n                    let line = '';\n                    for (let index in array[i]) {\n                      if (line != '') line += ',';\n                      line += array[i][index];\n                    }\n                    str += line + '\\r\\n';\n                  }\n\n                  //Every time a CSV of the data is downloaded, the file is given a name that includes the Date and Time so it can be uniquely identified    \n                  var d = new Date();\n                  var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '-' + d.getHours() + '-' + d.getMinutes() + '-' + d.getSeconds();\n                  let fileName = \"QuestionnaireResponses\" + date.toString() + \".csv\";\n                  console.log(fileName);\n\n                  this.File.writeFile(this.File.externalRootDirectory + '/Download/', fileName, str)\n                    .then(\n                    _ => {\n                      let alert = this.alertCtrl.create({\n                        title: 'Download Success',\n                        subTitle: 'A .csv of the questionnaire form responses has been successfully exported to your Downloads folder',\n                        buttons: ['Continue']\n                      });\n                      alert.present();\n                    }\n                    )\n                    .catch(\n                    err => {\n\n                      this.File.writeExistingFile(this.File.dataDirectory, fileName, str)\n                        .then(\n                        _ => {\n                          let alert = this.alertCtrl.create({\n                            title: 'Download Success',\n                            subTitle: 'A .csv of the questionnaire form responses has been successfully exported to your Downloads folder',\n                            buttons: ['Continue']\n                          });\n                          alert.present();\n                        }\n                        )\n                        .catch(\n                        err => {\n                          console.log(err + 'Failure' + this.File.dataDirectory)\n                        }\n                        )\n                    }\n                    )\n                }\n              }\n\n            }, err => {\n              console.log('Error: ', err);\n            });\n\n        }\n\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving questionnaire responses\");\n      });\n  }\n\n\n  /**\n   * This method allows the user to download a csv file of the visitor history to the device's 'Downloads' folder.\n   */\n  downloadCSV() {\n    this.sqlitedatabase.listLoginDetailsForTable()\n      .then((stats) => {\n        let arrayConverted2 = [];\n\n        for (var q = 0; q < stats.length; q++) {\n          var logoutTimeString = (stats[q].logout_time).toString();\n          var loginTimeString = (stats[q].login_time).toString();\n          var currentDateInfoArray = logoutTimeString.split(\" \");\n          var currentYear = currentDateInfoArray[3];\n          var year = 1970;\n\n          if (currentYear.toString() == year.toString()) {\n            var stillActiveString = 'Volunteer still active';\n\n            arrayConverted2.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: stillActiveString\n            });\n          } else {\n\n            arrayConverted2.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: logoutTimeString\n            });\n\n          }\n\n\n        }\n\n        let array = typeof arrayConverted2 != 'object' ? JSON.parse(arrayConverted2) : arrayConverted2;\n        let str = '';\n        let row = \"\";\n        for (let index in arrayConverted2[0]) {\n          row += index + ',';\n        }\n        row = row.slice(0, -1);\n        str += row + '\\r\\n';\n\n        for (let i = array.length - 1; i >= 0; i--) {\n          let line = '';\n          for (let index in array[i]) {\n            if (line != '') line += ',';\n            line += array[i][index];\n          }\n          str += line + '\\r\\n';\n        }\n\n        //Every time a CSV of the data is downloaded, the file is given a name that includes the Date and Time so it can be uniquely identified    \n        var d = new Date();\n        var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '-' + d.getHours() + '-' + d.getMinutes() + '-' + d.getSeconds();\n        let fileName = \"LoginHistory\" + date.toString() + \".csv\";\n        console.log(fileName);\n\n        this.File.writeFile(this.File.externalRootDirectory + '/Download/', fileName, str)\n          .then(\n          _ => {\n            let alert = this.alertCtrl.create({\n              title: 'Download Success',\n              subTitle: 'A .csv of the login history has been successfully exported to your Downloads folder',\n              buttons: ['Continue']\n            });\n            alert.present();\n          }\n          )\n          .catch(\n          err => {\n\n            this.File.writeExistingFile(this.File.dataDirectory, fileName, str)\n              .then(\n              _ => {\n                let alert = this.alertCtrl.create({\n                  title: 'Download Success',\n                  subTitle: 'A .csv of the login history has been successfully exported to your Downloads folder',\n                  buttons: ['Continue']\n                });\n                alert.present();\n              }\n              )\n              .catch(\n              err => {\n                console.log(err + 'Failure' + this.File.dataDirectory)\n              }\n              )\n          }\n          )\n      }\n      , err => {\n        let alert = this.alertCtrl.create({\n          title: 'Download Failure',\n          subTitle: 'A .csv of the login history has failed to export',\n          buttons: ['Continue']\n        });\n        alert.present();\n      });\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/csv-downloads/csv-downloads.ts","////////////////////////////////////////////////////////////////////////////////////////////////\n/*\nThis file google-drive.ts is adapted from https://developers.google.com/apis-explorer/?hl=en_GB#p/sheets/v4/\n\n*/\n////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class GoogleDriveProvider {\n\n  registrationArray = [];\n  latestTimeStamp = '';\n  latestTimeStamp2 = '';\n  valueChangeStatus = false;\n  valueChangeStatus2 = false;\n  constructor(public http: Http, private sqlitedatabase: sqlitedatabase) {\n\n  }\n\n  /**\n   * This method retrieves the data from the Registration Google sheet usin gthe Google sheets REST API. It stores the data in the 'inputArray' array. \n   * It will only do so if the time stamp ofthe particular row in the Google sheet is more recent than the last time stamp from the last import. \n   * The program keeps track of the time stamps of the data that was imported. \n   */\n  getGoogleDocRegistrationData() {\n    this.updateLastSync();\n\n\n    this.http.get('https://sheets.googleapis.com/v4/spreadsheets/1JL2UaQGqsaGv0dWnShQvFUnivfu-4Hi4P3XkqhwgzpA/values/Live!A2%3AZZZ?key=AIzaSyB1gTt1BzWO6sueuIYAwabWPfgWE6MZrOU').map(res => res.json()).subscribe(data => {\n      for (var i = 0; i < data.values.length; i++) {\n        if (data.values[i][1]) {\n          var lastGoogleTimestamp = data.values[i][0];\n\n\n\n          var lastGoogleTimestampUTC = this.spliceDateToUTC(lastGoogleTimestamp);\n\n\n          console.log(\"unmodified lastgoogletimestamp2: \" + lastGoogleTimestampUTC)\n          console.log(\"unmodified lastgoogletimestamp: \" + lastGoogleTimestamp)\n          console.log(\"parsed lastTimestamp: \" + this.latestTimeStamp);\n          console.log(\"parsed lastGoogleTimestamp: \" + Date.parse(lastGoogleTimestampUTC));\n          if (Date.parse(lastGoogleTimestampUTC) > +this.latestTimeStamp) {\n            console.log(\"adding new data from google sheets because new data available\");\n            let inputArray = [];\n            let outputRegistrationArray = [];\n\n\n            for (var j = 0; j < data.values[i].length; j++) {\n\n              inputArray.push(data.values[i][j]);\n\n            }\n            console.log(\"inputArray: \" + inputArray);\n            this.spliceDataForRegistration(inputArray, outputRegistrationArray);\n            this.registerUserFromDB(outputRegistrationArray);\n            this.valueChangeStatus = true;\n          }\n\n\n        }\n      }\n\n      if (this.valueChangeStatus) {\n        this.sqlitedatabase.setLastSync(Date.parse(lastGoogleTimestampUTC));\n        this.valueChangeStatus = false;\n      }\n    });\n\n\n  }\n\n\n  /**\n   * This method retrieves the data from the Diversity Questionnaire Google sheet using the Google sheets REST API. It stores the data in the 'inputArray' array. \n   * It will only do so if the time stamp ofthe particular row in the Google sheet is more recent than the last time stamp from the last import. \n   * The program keeps track of the time stamps of the data that was imported. \n   */\n  getGoogleDocDiversityQuestionnaireData() {\n    this.updateLastSync2();\n\n\n    this.http.get('https://sheets.googleapis.com/v4/spreadsheets/1eOuV0vyHF7w_ei7t-_PtIxqPjben3oba249IgQ575kc/values/Online%20Applications!A2%3AZZZ?valueRenderOption=FORMATTED_VALUE&key=AIzaSyB1gTt1BzWO6sueuIYAwabWPfgWE6MZrOU').map(res => res.json()).subscribe(data => {\n      for (var i = 0; i < data.values.length; i++) {\n        if (data.values[i][0]) {\n          var lastGoogleTimestamp = data.values[i][0];\n\n          var lastGoogleTimestampUTC = this.spliceDateToUTC(lastGoogleTimestamp);\n\n          console.log(\"unmodified lastgoogletimestamp2: \" + lastGoogleTimestampUTC)\n          console.log(\"unmodified lastgoogletimestamp: \" + lastGoogleTimestamp)\n          console.log(\"unparsed lastTimestamp: \" + this.latestTimeStamp2);\n          console.log(\"parsed lastGoogleTimestamp: \" + Date.parse(lastGoogleTimestampUTC));\n          if (Date.parse(lastGoogleTimestampUTC) > +this.latestTimeStamp2) {\n            console.log(\"adding new data from google sheets because new data available\");\n            let inputArray = [];\n            let outputRegistrationArray = [];\n\n            for (var j = 0; j < data.values[i].length; j++) {\n\n              inputArray.push(data.values[i][j]);\n\n            }\n\n            console.log(\"inputArray: \" + inputArray);\n            this.spliceDataForDiversityQuestionnaire(inputArray, outputRegistrationArray);\n\n            for (var l = 0; l < 9; l++) {\n              this.addDiversityAnswer(l + 1, outputRegistrationArray[l], data.values[i][0]);\n            }\n            this.valueChangeStatus2 = true;\n\n          }\n\n\n        }\n      }\n\n      if (this.valueChangeStatus2) {\n        this.sqlitedatabase.setLastSync2(Date.parse(lastGoogleTimestampUTC));\n        this.valueChangeStatus2 = false;\n      }\n    });\n\n  }\n\n\n  /**\n   * This method querries the last time stamp for the registration data from the local database and assigns it to the 'latestTimeStamp' variable. \n   */\n  public updateLastSync() {\n\n    this.sqlitedatabase.getLastSync().then((data2) => {\n\n      if (data2 == null) {\n        console.log(\"no timestamp yet\");\n        return;\n      }\n      if (data2.rows.length > 0) {\n        this.latestTimeStamp = data2.rows.item(0).last_sync;\n\n        console.log('maximumValue:' + data2.rows.item(0).last_sync);\n\n      }\n\n    });\n  }\n\n  /**\n   * This method querries the last time stamp for the diveristy questionnaire data from the local database and assigns it to the 'latestTimeStamp' variable. \n   */\n  public updateLastSync2() {\n\n    this.sqlitedatabase.getLastSync2().then((data2) => {\n\n      if (data2 == null) {\n        console.log(\"no timestamp yet\");\n        return;\n      }\n      if (data2.rows.length > 0) {\n        this.latestTimeStamp2 = data2.rows.item(0).last_sync;\n\n        console.log('maximumValue:' + data2.rows.item(0).last_sync);\n\n      }\n\n    });\n  }\n\n  /**\n   * This method takes an array of data from the Google sheet registration data and converts it to a format that is readable by the local database. \n   * @param inputArray \n   * @param outputArray \n   */\n  spliceDataForRegistration(inputArray, outputArray) {\n    var str = inputArray[1];\n\n    var splitted = str.split(' ');\n    //first name\n    outputArray.push(splitted[0]);\n    var str2 = ''\n    for (var k = 1; k < splitted.length; k++) {\n      str2 = str2 + splitted[k] + ' ';\n    }\n    //last name  \n    outputArray.push(str2);\n\n    //email\n    outputArray.push(inputArray[5]);\n\n    //phone number\n    outputArray.push(inputArray[4]);\n\n    //instead of address\n    outputArray.push(\"\");\n\n    //instead of postcode\n    outputArray.push(inputArray[2]);\n\n    //emergency_name\n    outputArray.push(inputArray[13]);\n\n    //emergency_telephone\n    outputArray.push(inputArray[14]);\n\n    //emergency_relationship\n    outputArray.push(inputArray[16]);\n\n\n  }\n\n\n\n\n  /**\n   * This method takes an array of data from the Google sheet diversity questionnaire data and converts it to a format that is readable by the local database. \n   * @param inputArray \n   * @param outputArray \n   */\n  spliceDataForDiversityQuestionnaire(inputArray, outputArray) {\n\n    //Age Category\n    outputArray.push(inputArray[19]);\n\n    // Sex\n    outputArray.push(inputArray[18]);\n\n    //Sexual orientation\n    outputArray.push(inputArray[23]);\n\n    //Etnicity\n    outputArray.push(inputArray[20]);\n\n    //Disability\n    outputArray.push(inputArray[21]);\n\n    //Caring responsibilities\n    outputArray.push(inputArray[22]);\n\n    //Religion\n    outputArray.push(inputArray[24]);\n\n    //Curent employment status\n    outputArray.push(inputArray[25]);\n\n    //London Borough\n    outputArray.push(inputArray[29]);\n\n\n  }\n\n\n\n\n  /**\n   * Thie method takes the date stamp from the google sheet (in dd/mm/yyyy hh:mm:ss) and converts it to a UTC-string format.\n   * @param inputDate \n   */\n  spliceDateToUTC(inputDate): string {\n    var outputUTCDate = '';\n    var splitted = inputDate.split('/', 3);\n    var splitted2 = splitted[2].split(' ');\n    outputUTCDate = outputUTCDate + splitted2[0] + '-' + splitted[1] + '-' + splitted[0] + ' ' + splitted2[1];\n    console.log(outputUTCDate);\n    return outputUTCDate;\n  }\n\n\n  /**\n   * This method adds data from an array to the question_response SQLite table that contains registration questionnaire data. \n   * @param data \n   */\n  addRegistrationQuestionnaireToDB(data): Promise<any> {\n    var sql = \"insert into question_response(\\\n                  id, user_id, \\\n                  recorded_at, \\\n                  question_id, option_text\\\n              ) values (?,?,?,?,?)\";\n    var values = [\n      data[0],\n      data[1],\n      data[2],\n      data[3],\n      data[4]\n    ];\n\n    return this.sqlitedatabase.db.executeSql(sql, values).catch(e => console.log(e));\n  }\n\n\n  /**\n   * This method adds data from an array to the sutton_user SQLite table that contains registration  data. \n   * @param data \n   */\n  registerUserFromDB(dataArray): Promise<any> {\n    var sql = \"insert into sutton_user(\\\n                 first_name, last_name, \\\n                  email_address, \\\n                  phone_number, \\\n                  address, postcode, \\\n                  emergency_name,\\\n                  emergency_telephone,\\\n                  emergency_relationship\\\n              ) values (?,?,?,?,?,?,?,?,?)\";\n    var values = [\n      dataArray[0],\n      dataArray[1],\n      dataArray[2],\n      dataArray[3],\n      dataArray[4],\n      dataArray[5],\n      dataArray[6],\n      dataArray[7],\n      dataArray[8]\n    ];\n\n    return this.sqlitedatabase.db.executeSql(sql, values).catch(e => console.log(e));\n  }\n\n\n  /**\n   * This method adds data from an array to the diversity_response SQLite table that contains diversity questionnaire data. \n   * @param data \n   */\n  public addDiversityAnswer(question_id: number, answer: string, timestamp: string) {\n    let insert_sql = \"INSERT INTO diversity_response (\\\n                        question_id, option_text, recorded_at)\\\n                        VALUES (?, ?, ?)\";\n    let params = [question_id, answer, timestamp];\n    this.sqlitedatabase.db.executeSql(insert_sql, params)\n\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/google-drive/google-drive.ts","////////////////////////////////////////////////////////////////////////////////////////////////\n/*\nThis file backand.ts is adapted from http://blog.backand.com/how-to-use-ionic-2-with-backand/\n\n*/\n////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Http, Headers } from '@angular/http';\n\n\n\n@Injectable()\nexport class BackandProvider {\n\n  auth_token: { header_name: string, header_value: string } = { header_name: 'AnonymousToken', header_value: '25d59e1a-64af-4ec1-9cd0-91eb2516a8e2' };\n  api_url: string = 'https://api.backand.com:443';\n  app_name: string = 'scfapp';\n\n  constructor(public http: Http) { }\n\n  private authHeader() {\n    var authHeader = new Headers();\n    authHeader.append(this.auth_token.header_name, this.auth_token.header_value);\n    return authHeader;\n  }\n\n  public getRegistrations() {\n    return this.http.get(this.api_url + '/1/objects/registration', {\n      headers: this.authHeader()\n    })\n      .map(res => res.json())\n  }\n\n  public getLoginData() {\n    return this.http.get(this.api_url + '/1/objects/login_history', {\n      headers: this.authHeader()\n    })\n      .map(res => res.json())\n  }\n\n  public getRegistrationQuestionnaireData() {\n    return this.http.get(this.api_url + '/1/objects/registration_questionnaire', {\n      headers: this.authHeader()\n    })\n      .map(res => res.json())\n  }\n\n\n  public getDiversityQuestionnaireData() {\n    return this.http.get(this.api_url + '/1/objects/diversity_questionnaire', {\n      headers: this.authHeader()\n    })\n      .map(res => res.json())\n  }\n\n\n\n  public addRegistration(registration: string[]) {\n    let data = JSON.stringify({ user_id: registration[0], first_name: registration[1], last_name: registration[2], email_address: registration[3], phone_number: registration[4], address: registration[5], postcode: registration[6], emergency_name: registration[7], emergency_telephone: registration[8], emergency_relationship: registration[9] });\n    console.log(\"print from backand.ts shows what stringify looks like: \" + data)\n    return this.http.post(this.api_url + '/1/objects/registration', data,\n      {\n        headers: this.authHeader()\n      })\n      .map(res => {\n        return res.json();\n\n      });\n  }\n\n  public addRegistrationData(data) {\n\n    return this.http.post(this.api_url + '/1/objects/registration', data,\n      {\n        headers: this.authHeader()\n      })\n      .map(res => {\n        return res.json();\n\n      })\n\n  }\n\n\n  public getSingleRegistration(user_id: string) {\n\n    return this.http.get(this.api_url + '/1/objects/registration/' + user_id, {\n      headers: this.authHeader()\n    })\n      .map(res => res.json());\n\n\n  }\n\n\n  public getRegistrationsAsArray() {\n    this.http.get(this.api_url + '/1/objects/registration', {\n      headers: this.authHeader()\n    })\n      .map(res => res.json()).subscribe(data => {\n        console.log(data);\n      });\n\n  }\n\n  public addLoginData(data) {\n\n    return this.http.post(this.api_url + '/1/objects/login_history', data,\n      {\n        headers: this.authHeader()\n      })\n      .map(res => {\n        return res.json();\n\n      })\n\n  }\n\n\n  public addRegistrationQuestionnaireData(data) {\n\n    return this.http.post(this.api_url + '/1/objects/registration_questionnaire', data,\n      {\n        headers: this.authHeader()\n      })\n      .map(res => {\n        return res.json();\n\n      })\n\n  }\n\n\n\n  public addDiversityQuestionnaireData(data) {\n\n    return this.http.post(this.api_url + '/1/objects/diversity_questionnaire', data,\n      {\n        headers: this.authHeader()\n      })\n      .map(res => {\n        return res.json();\n\n      })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/backand/backand.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Network } from '@ionic-native/network';\n\n\n@Injectable()\nexport class ConnectionCheckProvider {\n\n  connected: boolean;\n\n  constructor(public http: HttpClient, private network: Network) {\n    this.connectionStatus();\n  }\n\n  /**\n   * This method checks if the device is connected to a network. If there is not connection or the conenction status is 'uknown' then the 'connected' variable will have the value of false. \n   */\n  public connectionStatus() {\n    if (this.network.type == 'unknown' || this.network.type == 'none') {\n      this.connected = false;\n      console.log(\"no network connection\")\n    }\n    else {\n      this.connected = true;\n      console.log(\"network connection established\")\n    }\n\n  }\n\n\n\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/connection-check/connection-check.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomepagePage } from '../pages/homepage/homepage';\n\nimport { LoginPage } from '../pages/login/login';\nimport { LogoutPage } from '../pages/logout/logout';\n\nimport { Register0Page } from '../pages/register0/register0';\nimport { Register1Page } from '../pages/register1/register1';\nimport { Register2Page } from '../pages/register2/register2';\nimport { Register3Page } from '../pages/register3/register3';\nimport { Register4Page } from '../pages/register4/register4';\nimport { Register5Page } from '../pages/register5/register5';\nimport { Register6Page } from '../pages/register6/register6';\n\nimport { Questionnaire1Page } from '../pages/questionnaire1/questionnaire1';\nimport { Questionnaire2Page } from '../pages/questionnaire2/questionnaire2';\nimport { Questionnaire3Page } from '../pages/questionnaire3/questionnaire3';\nimport { Questionnaire4Page } from '../pages/questionnaire4/questionnaire4';\nimport { Questionnaire6Page } from '../pages/questionnaire6/questionnaire6';\nimport { Questionnaire7Page } from '../pages/questionnaire7/questionnaire7';\nimport { Questionnaire9Page } from '../pages/questionnaire9/questionnaire9';\nimport { Questionnaire10Page } from '../pages/questionnaire10/questionnaire10';\nimport { Questionnaire11Page } from '../pages/questionnaire11/questionnaire11';\n\nimport {HttpClientModule} from '@angular/common/http';\n\n\nimport { SQLite } from '@ionic-native/sqlite';\n\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { ShareProvider } from '../providers/share/share';\n\nimport { File } from '@ionic-native/file';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\nimport { FilePath } from '@ionic-native/file-path';\nimport { Camera } from '@ionic-native/camera';\n\nimport { sqlitedatabase } from '../providers/sqlitedatabase/sqlitedatabase';\n\nimport { ScreenOrientation } from '@ionic-native/screen-orientation';\nimport { HttpModule } from '@angular/http';\n\n\n\nimport { AdminPage } from '../pages/admin/admin'; \nimport { AdminHomePage } from '../pages/admin-home/admin-home';\nimport { AdminAppSettingsPage } from '../pages/admin-app-settings/admin-app-settings';\nimport { AdminVisitorHistoryPage } from '../pages/admin-visitor-history/admin-visitor-history';\nimport { AdminVisitorDataPage } from '../pages/admin-visitor-data/admin-visitor-data'; \nimport { Graph1Page } from '../pages/graph1/graph1';\nimport { Graph2Page } from '../pages/graph2/graph2';\nimport { Graph3Page } from '../pages/graph3/graph3';\nimport { Graph4Page } from '../pages/graph4/graph4';\n\n\n\n\nimport { GraphScatter1Page } from '../pages/graph-scatter1/graph-scatter1';\nimport { GraphScatter2Page } from '../pages/graph-scatter2/graph-scatter2';\nimport { GraphScatter3Page } from '../pages/graph-scatter3/graph-scatter3';\nimport { GraphScatter4Page } from '../pages/graph-scatter4/graph-scatter4';\nimport { GraphScatter5Page } from '../pages/graph-scatter5/graph-scatter5';\nimport { GraphPie2Page } from '../pages/graph-pie2/graph-pie2';\nimport { GraphPie3Page } from '../pages/graph-pie3/graph-pie3';\nimport { GraphPie4Page } from '../pages/graph-pie4/graph-pie4';\nimport { GraphPie5Page } from '../pages/graph-pie5/graph-pie5';\nimport { GraphBar1Page } from '../pages/graph-bar1/graph-bar1';\nimport { GraphBar2Page } from '../pages/graph-bar2/graph-bar2';\nimport { GraphBar3Page } from '../pages/graph-bar3/graph-bar3';\nimport { GraphBar4Page } from '../pages/graph-bar4/graph-bar4';\nimport { GraphBar5Page } from '../pages/graph-bar5/graph-bar5';\n\nimport { DiversityQuestionnaire0Page } from '../pages/diversity-questionnaire0/diversity-questionnaire0';\nimport { DiversityQuestionnaire1Page } from '../pages/diversity-questionnaire1/diversity-questionnaire1';\nimport { DiversityQuestionnaire2Page } from '../pages/diversity-questionnaire2/diversity-questionnaire2';\nimport { DiversityQuestionnaire3Page } from '../pages/diversity-questionnaire3/diversity-questionnaire3';\nimport { DiversityQuestionnaire4Page } from '../pages/diversity-questionnaire4/diversity-questionnaire4';\nimport { DiversityQuestionnaire5Page } from '../pages/diversity-questionnaire5/diversity-questionnaire5';\nimport { DiversityQuestionnaire6Page } from '../pages/diversity-questionnaire6/diversity-questionnaire6';\nimport { DiversityQuestionnaire7Page } from '../pages/diversity-questionnaire7/diversity-questionnaire7';\nimport { DiversityQuestionnaire8Page } from '../pages/diversity-questionnaire8/diversity-questionnaire8';\nimport { DiversityQuestionnaire9Page } from '../pages/diversity-questionnaire9/diversity-questionnaire9';\nimport { GoogleDriveProvider } from '../providers/google-drive/google-drive';\n\nimport { BackandProvider } from '../providers/backand/backand';\nimport { ConnectionCheckProvider } from '../providers/connection-check/connection-check';\nimport { Network } from '@ionic-native/network';\n\nimport { CsvDownloadsPage } from '../pages/csv-downloads/csv-downloads';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    \n    HomepagePage,\n    LoginPage,\n    LogoutPage,\n    Register1Page,\n    Register2Page,\n    Register3Page,\n    Register5Page,\n    Register6Page,\n    Register4Page,\n    Register0Page,\n    AdminPage,\n    AdminHomePage,\n    AdminAppSettingsPage,\n    AdminVisitorHistoryPage,\n    AdminVisitorDataPage,\n    Graph1Page,\n    Graph2Page,\n    Graph3Page,\n    Graph4Page,\n    Questionnaire1Page,\n    Questionnaire2Page,\n    Questionnaire3Page,\n    Questionnaire4Page,\n    Questionnaire6Page,\n    Questionnaire7Page,\n    Questionnaire9Page,\n    Questionnaire10Page,\n    Questionnaire11Page,\n    GraphScatter1Page,\n    GraphScatter2Page,\n    GraphScatter3Page,\n    GraphScatter4Page,\n    GraphScatter5Page,\n    GraphPie2Page,\n    GraphPie3Page,\n    GraphPie4Page,\n    GraphPie5Page,\n    GraphBar1Page,\n    GraphBar2Page,\n    GraphBar3Page,\n    GraphBar4Page,\n    GraphBar5Page,\n\n    DiversityQuestionnaire0Page,\n    DiversityQuestionnaire1Page,\n    DiversityQuestionnaire2Page,\n    DiversityQuestionnaire3Page,\n    DiversityQuestionnaire4Page,\n    DiversityQuestionnaire5Page,\n    DiversityQuestionnaire6Page,\n    DiversityQuestionnaire7Page,\n    DiversityQuestionnaire8Page,\n    DiversityQuestionnaire9Page,\n    CsvDownloadsPage,\n    \n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomepagePage,\n    LoginPage,\n    LogoutPage,\n    Register0Page,\n    Register1Page,\n    Register2Page,\n    Register3Page,\n    Register4Page,\n    Register5Page,\n    Register6Page,\n    Questionnaire1Page,\n    Questionnaire2Page,\n    Questionnaire3Page,\n    Questionnaire4Page,\n    Questionnaire6Page,\n    Questionnaire7Page,\n    Questionnaire9Page,\n    Questionnaire10Page,\n    Questionnaire11Page,\n    \n    AdminPage,\n    AdminHomePage,\n    AdminAppSettingsPage,\n    AdminVisitorHistoryPage,\n    AdminVisitorDataPage,\n    Graph1Page,\n    Graph2Page,\n    Graph3Page,\n    Graph4Page,\n    GraphScatter1Page,\n    GraphScatter2Page,\n    GraphScatter3Page,\n    GraphScatter4Page,\n    GraphScatter5Page,\n    GraphPie2Page,\n    GraphPie3Page,\n    GraphPie4Page,\n    GraphPie5Page,\n    GraphBar1Page,\n    GraphBar2Page,\n    GraphBar3Page,\n    GraphBar4Page,\n    GraphBar5Page,\n\n    DiversityQuestionnaire0Page,\n    DiversityQuestionnaire1Page,\n    DiversityQuestionnaire2Page,\n    DiversityQuestionnaire3Page,\n    DiversityQuestionnaire4Page,\n    DiversityQuestionnaire5Page,\n    DiversityQuestionnaire6Page,\n    DiversityQuestionnaire7Page,\n    DiversityQuestionnaire8Page,\n    DiversityQuestionnaire9Page,\n    CsvDownloadsPage\n\n\n  ],\n  providers: [\n    SQLite,\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ShareProvider,\n    File,\n    sqlitedatabase,\n    ScreenOrientation,\n    GoogleDriveProvider,\n    FileTransfer,\n    FileTransferObject,\n    Network,\n    Camera,\n    FilePath,\n    BackandProvider,\n    ConnectionCheckProvider,\n  ]\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n\n\nimport { HomepagePage } from '../pages/homepage/homepage';\n\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  \n    rootPage:any = HomepagePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { LoginPage } from '../login/login';\nimport { Register0Page } from '../register0/register0';\nimport { LogoutPage } from '../logout/logout';\nimport { AdminPage } from '../admin/admin';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'page-homepage',\n  templateUrl: 'homepage.html'\n})\nexport class HomepagePage {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, private sqlitedatabase: sqlitedatabase,\n    private storage: Storage) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle');\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n  }\n\n  /**\n   * This method takes the user to the LoginPage page. \n   */\n  goToLogin() {\n    this.logStats();\n    this.navCtrl.push(LoginPage);\n\n  }\n\n  /**\n     * This method takes the user to the Regist0Page page. \n     */\n  goToRegister0() {\n    this.navCtrl.push(Register0Page);\n  }\n  /**\n   * This method takes the user to the LogoutPage page. \n   */\n  goToLogout() {\n    this.navCtrl.push(LogoutPage);\n  }\n\n  /**\n   * This method takes the user to the AdminPage page. \n   */\n  goToAdmin() {\n    this.navCtrl.push(AdminPage);\n  }\n\n\n  /**\n   * This method is used in debugging and prints out all the data contained within the local database to the console. \n   */\n  logStats() {\n\n\n\n\n    // listAnswerStats(question_id) returns a promise  of array of stats \n    // for all questions. To use the result wrap it inside then()\n    this.sqlitedatabase.listAllStatsNoCount().then((stats) => {\n      console.log(\"listAllStatsNoCount\");\n      console.log(JSON.stringify(stats));\n    });\n\n\n    this.sqlitedatabase.listAllRegistration().then((stats) => {\n      console.log(\"list all registrations\");\n      console.log(JSON.stringify(stats));\n    });\n\n    this.sqlitedatabase.listAllDiversityNoCount().then((stats) => {\n      console.log(\"list all diversity\");\n      console.log(JSON.stringify(stats));\n    });\n\n    this.sqlitedatabase.listAllLog().then((stats) => {\n      console.log(\"list all login logout\");\n      console.log(JSON.stringify(stats));\n    });\n\n    this.sqlitedatabase.listLastSync().then((stats) => {\n      console.log(\"list last sync\");\n      console.log(JSON.stringify(stats));\n    });\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/homepage/homepage.ts","var map = {\n\t\"./af\": 269,\n\t\"./af.js\": 269,\n\t\"./ar\": 270,\n\t\"./ar-dz\": 271,\n\t\"./ar-dz.js\": 271,\n\t\"./ar-kw\": 272,\n\t\"./ar-kw.js\": 272,\n\t\"./ar-ly\": 273,\n\t\"./ar-ly.js\": 273,\n\t\"./ar-ma\": 274,\n\t\"./ar-ma.js\": 274,\n\t\"./ar-sa\": 275,\n\t\"./ar-sa.js\": 275,\n\t\"./ar-tn\": 276,\n\t\"./ar-tn.js\": 276,\n\t\"./ar.js\": 270,\n\t\"./az\": 277,\n\t\"./az.js\": 277,\n\t\"./be\": 278,\n\t\"./be.js\": 278,\n\t\"./bg\": 279,\n\t\"./bg.js\": 279,\n\t\"./bn\": 280,\n\t\"./bn.js\": 280,\n\t\"./bo\": 281,\n\t\"./bo.js\": 281,\n\t\"./br\": 282,\n\t\"./br.js\": 282,\n\t\"./bs\": 283,\n\t\"./bs.js\": 283,\n\t\"./ca\": 284,\n\t\"./ca.js\": 284,\n\t\"./cs\": 285,\n\t\"./cs.js\": 285,\n\t\"./cv\": 286,\n\t\"./cv.js\": 286,\n\t\"./cy\": 287,\n\t\"./cy.js\": 287,\n\t\"./da\": 288,\n\t\"./da.js\": 288,\n\t\"./de\": 289,\n\t\"./de-at\": 290,\n\t\"./de-at.js\": 290,\n\t\"./de-ch\": 291,\n\t\"./de-ch.js\": 291,\n\t\"./de.js\": 289,\n\t\"./dv\": 292,\n\t\"./dv.js\": 292,\n\t\"./el\": 293,\n\t\"./el.js\": 293,\n\t\"./en-au\": 294,\n\t\"./en-au.js\": 294,\n\t\"./en-ca\": 295,\n\t\"./en-ca.js\": 295,\n\t\"./en-gb\": 296,\n\t\"./en-gb.js\": 296,\n\t\"./en-ie\": 297,\n\t\"./en-ie.js\": 297,\n\t\"./en-nz\": 298,\n\t\"./en-nz.js\": 298,\n\t\"./eo\": 299,\n\t\"./eo.js\": 299,\n\t\"./es\": 300,\n\t\"./es-do\": 301,\n\t\"./es-do.js\": 301,\n\t\"./es.js\": 300,\n\t\"./et\": 302,\n\t\"./et.js\": 302,\n\t\"./eu\": 303,\n\t\"./eu.js\": 303,\n\t\"./fa\": 304,\n\t\"./fa.js\": 304,\n\t\"./fi\": 305,\n\t\"./fi.js\": 305,\n\t\"./fo\": 306,\n\t\"./fo.js\": 306,\n\t\"./fr\": 307,\n\t\"./fr-ca\": 308,\n\t\"./fr-ca.js\": 308,\n\t\"./fr-ch\": 309,\n\t\"./fr-ch.js\": 309,\n\t\"./fr.js\": 307,\n\t\"./fy\": 310,\n\t\"./fy.js\": 310,\n\t\"./gd\": 311,\n\t\"./gd.js\": 311,\n\t\"./gl\": 312,\n\t\"./gl.js\": 312,\n\t\"./gom-latn\": 313,\n\t\"./gom-latn.js\": 313,\n\t\"./he\": 314,\n\t\"./he.js\": 314,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 316,\n\t\"./hr.js\": 316,\n\t\"./hu\": 317,\n\t\"./hu.js\": 317,\n\t\"./hy-am\": 318,\n\t\"./hy-am.js\": 318,\n\t\"./id\": 319,\n\t\"./id.js\": 319,\n\t\"./is\": 320,\n\t\"./is.js\": 320,\n\t\"./it\": 321,\n\t\"./it.js\": 321,\n\t\"./ja\": 322,\n\t\"./ja.js\": 322,\n\t\"./jv\": 323,\n\t\"./jv.js\": 323,\n\t\"./ka\": 324,\n\t\"./ka.js\": 324,\n\t\"./kk\": 325,\n\t\"./kk.js\": 325,\n\t\"./km\": 326,\n\t\"./km.js\": 326,\n\t\"./kn\": 327,\n\t\"./kn.js\": 327,\n\t\"./ko\": 328,\n\t\"./ko.js\": 328,\n\t\"./ky\": 329,\n\t\"./ky.js\": 329,\n\t\"./lb\": 330,\n\t\"./lb.js\": 330,\n\t\"./lo\": 331,\n\t\"./lo.js\": 331,\n\t\"./lt\": 332,\n\t\"./lt.js\": 332,\n\t\"./lv\": 333,\n\t\"./lv.js\": 333,\n\t\"./me\": 334,\n\t\"./me.js\": 334,\n\t\"./mi\": 335,\n\t\"./mi.js\": 335,\n\t\"./mk\": 336,\n\t\"./mk.js\": 336,\n\t\"./ml\": 337,\n\t\"./ml.js\": 337,\n\t\"./mr\": 338,\n\t\"./mr.js\": 338,\n\t\"./ms\": 339,\n\t\"./ms-my\": 340,\n\t\"./ms-my.js\": 340,\n\t\"./ms.js\": 339,\n\t\"./my\": 341,\n\t\"./my.js\": 341,\n\t\"./nb\": 342,\n\t\"./nb.js\": 342,\n\t\"./ne\": 343,\n\t\"./ne.js\": 343,\n\t\"./nl\": 344,\n\t\"./nl-be\": 345,\n\t\"./nl-be.js\": 345,\n\t\"./nl.js\": 344,\n\t\"./nn\": 346,\n\t\"./nn.js\": 346,\n\t\"./pa-in\": 347,\n\t\"./pa-in.js\": 347,\n\t\"./pl\": 348,\n\t\"./pl.js\": 348,\n\t\"./pt\": 349,\n\t\"./pt-br\": 350,\n\t\"./pt-br.js\": 350,\n\t\"./pt.js\": 349,\n\t\"./ro\": 351,\n\t\"./ro.js\": 351,\n\t\"./ru\": 352,\n\t\"./ru.js\": 352,\n\t\"./sd\": 353,\n\t\"./sd.js\": 353,\n\t\"./se\": 354,\n\t\"./se.js\": 354,\n\t\"./si\": 355,\n\t\"./si.js\": 355,\n\t\"./sk\": 356,\n\t\"./sk.js\": 356,\n\t\"./sl\": 357,\n\t\"./sl.js\": 357,\n\t\"./sq\": 358,\n\t\"./sq.js\": 358,\n\t\"./sr\": 359,\n\t\"./sr-cyrl\": 360,\n\t\"./sr-cyrl.js\": 360,\n\t\"./sr.js\": 359,\n\t\"./ss\": 361,\n\t\"./ss.js\": 361,\n\t\"./sv\": 362,\n\t\"./sv.js\": 362,\n\t\"./sw\": 363,\n\t\"./sw.js\": 363,\n\t\"./ta\": 364,\n\t\"./ta.js\": 364,\n\t\"./te\": 365,\n\t\"./te.js\": 365,\n\t\"./tet\": 366,\n\t\"./tet.js\": 366,\n\t\"./th\": 367,\n\t\"./th.js\": 367,\n\t\"./tl-ph\": 368,\n\t\"./tl-ph.js\": 368,\n\t\"./tlh\": 369,\n\t\"./tlh.js\": 369,\n\t\"./tr\": 370,\n\t\"./tr.js\": 370,\n\t\"./tzl\": 371,\n\t\"./tzl.js\": 371,\n\t\"./tzm\": 372,\n\t\"./tzm-latn\": 373,\n\t\"./tzm-latn.js\": 373,\n\t\"./tzm.js\": 372,\n\t\"./uk\": 374,\n\t\"./uk.js\": 374,\n\t\"./ur\": 375,\n\t\"./ur.js\": 375,\n\t\"./uz\": 376,\n\t\"./uz-latn\": 377,\n\t\"./uz-latn.js\": 377,\n\t\"./uz.js\": 376,\n\t\"./vi\": 378,\n\t\"./vi.js\": 378,\n\t\"./x-pseudo\": 379,\n\t\"./x-pseudo.js\": 379,\n\t\"./yo\": 380,\n\t\"./yo.js\": 380,\n\t\"./zh-cn\": 381,\n\t\"./zh-cn.js\": 381,\n\t\"./zh-hk\": 382,\n\t\"./zh-hk.js\": 382,\n\t\"./zh-tw\": 383,\n\t\"./zh-tw.js\": 383\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 501;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 501\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\nimport { AdminPage } from '../admin/admin'\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { AdminAppSettingsPage } from '../admin-app-settings/admin-app-settings';\nimport { AdminVisitorHistoryPage } from '../admin-visitor-history/admin-visitor-history';\nimport { GoogleDriveProvider } from './../../providers/google-drive/google-drive';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\nimport { BackandProvider } from '../../providers/backand/backand';\nimport { ConnectionCheckProvider } from '../../providers/connection-check/connection-check';\nimport * as papa from 'papaparse';\n\nimport { File } from '@ionic-native/file';\n\n\nimport { Http } from '@angular/http';\n\n\n@Component({\n  selector: 'page-admin-home',\n  templateUrl: 'admin-home.html',\n  providers: [GoogleDriveProvider]\n})\nexport class AdminHomePage {\n\n  registrations = [];\n  loginData = [];\n  diversityQuestionnaireData = [];\n  registrationQuestionnaireData = [];\n\n  csvData: any[] = [];\n  headerRow: any[] = [];\n  persons: Array<any>;\n  dataId: string;\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public gDrive: GoogleDriveProvider, private storage: Storage, private sqlitedatabase: sqlitedatabase, private backandService: BackandProvider, private connectioncheck: ConnectionCheckProvider, private alertController: AlertController, private http: Http, private File: File) {\n    this.autoLogoutUser();\n\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.connectioncheck.connectionStatus();\n    this.clearArrays();\n    this.csvFromDatabase();\n\n\n\n  }\n\n\n  /**\n   * This method opens the AdminPage page.\n   */\n  goToAdmin() {\n    this.navCtrl.push(AdminPage);\n  }\n\n  /**\n   * This method opens the HomepagePage page.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method opens the AdminAppSettingsPage page.\n   */\n  goToAdminAppSettings() {\n    this.navCtrl.push(AdminAppSettingsPage);\n  }\n  /**\n   * This method opens the AdminVistorDataPage page.\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n  /**\n   * This method opens the AdminVistoryHistoryPage page.  \n   */\n  goToAdminVisitorHistory() {\n    this.navCtrl.push(AdminVisitorHistoryPage);\n  }\n\n  /**\n   * This method is called when the \"Sync\" button is pressed. It retrieves data from the google sheets and stores it in the local SQLite database. \n   * After a 1 second timeout to make sure that the data retrieval is complete, it sends all the data stored on the local database to the online Backand database\n   * then clears the local database and redownloads all the data from the online database. \n   * This method is only called when there is an internet conenction, if there isn't one and error message will appear. \n   */\n  sync() {\n\n    this.connectioncheck.connectionStatus();\n    if (this.connectioncheck.connected) {\n      this.gDrive.getGoogleDocDiversityQuestionnaireData();\n      this.gDrive.getGoogleDocRegistrationData();\n      setTimeout(() => {\n        this.syncRegistration();\n        this.syncLoginHistory();\n        this.syncRegistrationQuestionnaire();\n        this.syncDiversityQuestionnaire();\n\n        let addTodoAlert = this.alertController.create({\n          title: \"Sync complete\",\n          message: \"The data from the Google forms and the online database has been synced\",\n        });\n        addTodoAlert.present();\n\n      }, 7000);\n\n\n    }\n    else {\n      let addTodoAlert = this.alertController.create({\n        title: \"Warning!\",\n        message: \"No internet connection. Please try again later\",\n      });\n      addTodoAlert.present();\n    }\n  }\n\n  /**\n   * This method sends all the registration data from the local database to the onine database. Clears the local table containing the registration data and reloads all the online data to the local database.\n   * This clearing and reloading process ensures there are no data duplicates and that no data is corruct. \n   */\n  syncRegistration() {\n\n    this.sendRegistrationDataLoop().then(() => {\n\n      this.sqlitedatabase.clearRegistrationDb().then(() => {\n        this.loadRegistrations();\n        setTimeout(() => {\n          this.populateRegistrationTable();\n        }, 5000);\n\n\n\n\n      }).catch(e => console.log(e));\n\n\n    }).catch(e => console.log(e));\n\n\n  }\n\n  /**\n * This method sends all the login data from the local database to the onine database. Clears the local table containing the login data and reloads all the online data to the local database.\n * This clearing and reloading process ensures there are no data duplicates and that no data is corruct. \n */\n  syncLoginHistory() {\n\n    this.sendLoginData().then(() => {\n\n      this.sqlitedatabase.clearLoginHistoryDB().then(() => {\n\n        this.loadLoginData();\n        setTimeout(() => {\n          this.populatLoginHistoryTable();\n        }, 5000);\n\n\n\n\n      }).catch(e => console.log(e));\n\n\n    }).catch(e => console.log(e));\n\n\n  }\n\n  /**\n   * This method sends all the registration questionnaire data from the local database to the onine database. Clears the local table containing the registration questionnaire data and reloads all the online data to the local database.\n   * This clearing and reloading process ensures there are no data duplicates and that no data is corruct. \n   */\n  syncRegistrationQuestionnaire() {\n\n    this.sendRegistrationQuestionnaireData().then(() => {\n\n      this.sqlitedatabase.clearRegistrationQuestionnaireDB().then(() => {\n\n\n        this.loadRegistrationQuestionnaireData();\n        setTimeout(() => {\n          this.populateRegistrationQuestionnaireTable();\n        }, 5000);\n\n\n\n      }).catch(e => console.log(e));\n\n\n    }).catch(e => console.log(e));\n\n\n  }\n\n  /**\n * This method sends all the diversity questionnaire data from the local database to the onine database. Clears the local table containing the diversity questionnaire data and reloads all the online data to the local database.\n * This clearing and reloading process ensures there are no data duplicates and that no data is corruct. \n */\n\n  syncDiversityQuestionnaire() {\n\n    this.sendDiversityQuestionnaireData().then(() => {\n\n      this.sqlitedatabase.clearDiversityQuestionnaireDB().then(() => {\n\n        this.loadDiversityQuestionnaireData();\n        setTimeout(() => {\n          this.populateDiversityQuestionnaireTable();\n        }, 5000);\n\n\n\n\n      }).catch(e => console.log(e));\n\n\n    }).catch(e => console.log(e));\n\n\n  }\n\n  /**\n   * This method sends registration data from the local database to the online Backand database using the Backand REST API. \n   */\n  public sendRegistrationDataLoop(): Promise<any> {\n    console.log(\"sendRegistrationDataLoop called   \")\n    return this.sqlitedatabase.listAllRegistration().then((stats) => {\n      for (var i = 0; i < stats.length; i++) {\n        this.backandService.addRegistrationData(JSON.stringify(stats[i])).subscribe(\n\n          err => this.logError(err)\n        );\n      }\n\n\n    })\n  }\n\n\n\n  /**\n   * This method loads all the registration data from the online Backand database to the 'registrations' array using the Backand REST API. \n   */\n  public loadRegistrations() {\n    console.log(\"load registrations called\");\n    this.backandService.getRegistrations()\n      .subscribe(\n      data => {\n        this.registrations = data.data;\n\n      },\n      err => {\n        console.log(err);\n\n      }\n      );\n\n  }\n\n  /**\n * This method loads all the login data from the online Backand database to the 'loginData' array using the Backand REST API. \n */\n  public loadLoginData() {\n    console.log(\"load login data called\");\n    this.backandService.getLoginData()\n      .subscribe(\n      data => {\n        this.loginData = data.data;\n\n      },\n      err => {\n        console.log(err);\n      }\n      );\n\n  }\n\n  /**\n * This method loads all the registration questionnaire data from the online Backand database to the 'registrationQuestionnaireData' array using the Backand REST API. \n */\n  public loadRegistrationQuestionnaireData() {\n    console.log(\"load registration questionnaire data called\");\n    this.backandService.getRegistrationQuestionnaireData()\n      .subscribe(\n      data => {\n        this.registrationQuestionnaireData = data.data;\n\n      },\n      err => {\n        console.log(err);\n\n      }\n      );\n\n  }\n\n  /**\n * This method loads all the diversity questionnaire data from the online Backand database to the 'diversityQuestionnaireData' array using the Backand REST API. \n */\n  public loadDiversityQuestionnaireData() {\n    console.log(\"load diversity questionnaire data called\");\n    this.backandService.getDiversityQuestionnaireData()\n      .subscribe(\n      data => {\n        this.diversityQuestionnaireData = data.data;\n\n      },\n      err => {\n        console.log(err);\n      }\n      );\n\n  }\n\n\n  public logError(err: TemplateStringsArray) {\n    console.error('Error: ' + err);\n  }\n\n\n  /**\n   * This method populates the local SQLite database with data from the 'registrations' array.\n   */\n  populateRegistrationTable() {\n    console.log(\"populate registration table called\");\n\n\n\n    for (var i = 0; i < this.registrations.length; i++) {\n      let inputarray = [];\n      inputarray.push(this.registrations[i].user_id);\n      inputarray.push(this.registrations[i].first_name);\n      inputarray.push(this.registrations[i].last_name);\n      inputarray.push(this.registrations[i].email_address);\n      inputarray.push(this.registrations[i].phone_number);\n      inputarray.push(this.registrations[i].address);\n      inputarray.push(this.registrations[i].postcode);\n      inputarray.push(this.registrations[i].emergency_name);\n      inputarray.push(this.registrations[i].emergency_telephone);\n      inputarray.push(this.registrations[i].emergency_relationship);\n      this.sqlitedatabase.registerUserFromDB(inputarray);\n    }\n\n\n\n  }\n\n  /**\n   * This method sends login data from the local database to the online Backand database using the Backand REST API. \n   */\n  public sendLoginData(): Promise<any> {\n    console.log(\"sendLoginData called   \")\n    return this.sqlitedatabase.listAllLog().then((stats) => {\n      for (var i = 0; i < stats.length; i++) {\n        this.backandService.addLoginData(JSON.stringify(stats[i])).subscribe(\n\n          err => this.logError(err)\n        );\n      }\n\n\n    });\n  }\n\n  /**\n * This method sends registration qeustionnaire data from the local database to the online Backand database using the Backand REST API. \n */\n  public sendRegistrationQuestionnaireData(): Promise<any> {\n    console.log(\"sendRegistrationQuestionnaireData called   \")\n    return this.sqlitedatabase.listAllStatsNoCount().then((stats) => {\n      for (var i = 0; i < stats.length; i++) {\n        this.backandService.addRegistrationQuestionnaireData(JSON.stringify(stats[i])).subscribe(\n\n          err => this.logError(err)\n        );\n      }\n\n\n    });\n  }\n\n\n\n  /**\n   * This method sends diversity questionnaire data from the local database to the online Backand database using the Backand REST API. \n   */\n  public sendDiversityQuestionnaireData(): Promise<any> {\n    console.log(\"sendDiversityQuestionnaireData called   \")\n    return this.sqlitedatabase.listAllDiversityNoCount().then((stats) => {\n      for (var i = 0; i < stats.length; i++) {\n        this.backandService.addDiversityQuestionnaireData(JSON.stringify(stats[i])).subscribe(\n\n          err => this.logError(err)\n        );\n      }\n\n\n    });\n  }\n\n  /**\n   * This method populates the local SQLite database with data from the 'loginData' array.\n   */\n  populatLoginHistoryTable() {\n    console.log(\"populate login history table called\");\n\n\n\n    for (var i = 0; i < this.loginData.length; i++) {\n      let inputarray = [];\n      inputarray.push(this.loginData[i].id);\n      inputarray.push(this.loginData[i].user_id);\n      inputarray.push(this.loginData[i].login_time);\n      inputarray.push(this.loginData[i].logout_time);\n      this.sqlitedatabase.addLoginDataToDB(inputarray);\n    }\n\n\n\n\n\n  }\n\n\n  /**\n    * This method populates the local SQLite database with data from the 'registrationQuestionnaireData' array.\n    */\n  populateRegistrationQuestionnaireTable() {\n    console.log(\"populate registration questionnaire table called\");\n\n\n\n\n    for (var i = 0; i < this.registrationQuestionnaireData.length; i++) {\n      let inputarray = [];\n      inputarray.push(this.registrationQuestionnaireData[i].id);\n      inputarray.push(this.registrationQuestionnaireData[i].user_id);\n      inputarray.push(this.registrationQuestionnaireData[i].recorded_at);\n      inputarray.push(this.registrationQuestionnaireData[i].question_id);\n      inputarray.push(this.registrationQuestionnaireData[i].response);\n      this.sqlitedatabase.addRegistrationQuestionnaireToDB(inputarray);\n    }\n\n\n\n  }\n\n\n  /**\n    * This method populates the local SQLite database with data from the 'diverisytQuestionnaireData' array.\n    */\n  populateDiversityQuestionnaireTable() {\n    console.log(\"populate diversity questionnaire table called\");\n\n\n\n\n    for (var i = 0; i < this.diversityQuestionnaireData.length; i++) {\n      let inputarray = [];\n      inputarray.push(this.diversityQuestionnaireData[i].id);\n      inputarray.push(this.diversityQuestionnaireData[i].recorded_at);\n      inputarray.push(this.diversityQuestionnaireData[i].question_id);\n      inputarray.push(this.diversityQuestionnaireData[i].response);\n      this.sqlitedatabase.addDiversityQuestionnaireToDB(inputarray);\n    }\n\n\n\n  }\n\n\n  /**\n   * This method clears the 'registrations', 'loginData', 'registrationQeustionnaireData' and 'diversityQuestionnaireData' arrays. \n   */\n  clearArrays() {\n    this.registrations.length = 0;\n    this.loginData.length = 0;\n    this.registrationQuestionnaireData.length = 0;\n    this.diversityQuestionnaireData.length = 0;\n\n\n  }\n\n\n\n  /**\n   * The below methods used are taken from the admin-visitor-history.ts file. They are used\n   * to pre-populate the table before it is viewed by the user. This is done because there\n   * is an update bug where new logins aren't displayed unless the visitor history page is\n   * viewed twice.\n   */\n\n\n  /**\n   * This method retrieves the login history from the SQLite database.\n   */\n  csvFromDatabase() {\n    this.sqlitedatabase.listLoginDetailsForTable()\n      .then((stats) => {\n        let arrayConverted = [];\n\n        for (var q = 0; q < stats.length; q++) {\n          var logoutTimeString = (stats[q].logout_time).toString();\n          var loginTimeString = (stats[q].login_time).toString();\n          var currentDateInfoArray = logoutTimeString.split(\" \");\n          var currentYear = currentDateInfoArray[3];\n          var year = 1970;\n\n          if (currentYear.toString() == year.toString()) {\n            var stillActiveString = 'Volunteer still active';\n\n            arrayConverted.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: stillActiveString\n            });\n          } else {\n\n            arrayConverted.push({\n              first_name: stats[q].first_name,\n              last_name: stats[q].last_name,\n              email_address: stats[q].email_address,\n              login_time: loginTimeString,\n              logout_time: logoutTimeString\n            });\n\n          }\n\n\n        }\n\n        this.ConvertToCSV(arrayConverted);\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * This method converts the login history data to csv format.\n   */\n  ConvertToCSV(objArray) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    let row = \"\";\n    for (let index in objArray[0]) {\n      //Now convert each value to string and comma-separated\n      row += index + ',';\n    }\n    row = row.slice(0, -1);\n\n    //append Label row with line break\n    str += row + '\\r\\n';\n\n    for (let i = array.length - 1; i >= 0; i--) {\n      let line = '';\n\n      for (let index in array[i]) {\n        if (line != '') line += ',';\n        line += array[i][index];\n      }\n\n      str += line + '\\r\\n';\n    }\n\n    this.saveFile(str);\n  }\n\n  /**\n   * This method saves the csv data to a file in a local directory.\n   */\n  saveFile(body) {\n    let fileName = \"dummyData.csv\"\n    this.File.writeFile(this.File.dataDirectory, fileName, body)\n      .then(\n      _ => {\n        console.log('Success ;-)' + this.File.dataDirectory)\n      }\n      )\n      .catch(\n      err => {\n        this.File.writeExistingFile(this.File.dataDirectory, fileName, body)\n          .then(\n          _ => {\n            console.log('Success ;-)2' + this.File.dataDirectory)\n          }\n          )\n          .catch(\n          err => {\n            console.log(err + 'Failure' + this.File.dataDirectory)\n          }\n          )\n      }\n      )\n    this.readCsvData();\n  }\n\n  /**\n   * This method extracts the csv data from the written file so that it can be parsed to a table.\n   */\n  private readCsvData() {\n    this.http.get(this.File.dataDirectory + 'dummyData.csv')\n      .subscribe(\n      data => this.extractData(data),\n      err => this.handleError(err)\n      );\n  }\n  private handleError(err) {\n    console.log('something went wrong: ', err);\n  }\n\n  /**\n   * This method sets up a dynamic table in the HTML file and parses the login data to it.\n   */\n  private extractData(res) {\n    let csvData = res['_body'] || '';\n    let parsedData = papa.parse(csvData).data;\n    this.headerRow = [\"First Name\", \"Last Name\", \"Email Address\", \"Login Time\"];\n    parsedData.splice(0, 1);\n    this.csvData = parsedData;\n  }\n\n\n  /**\n   * This method is activated by entering the current page, therefore needs to be two scenarios for execution:\n   * 1) The auto-logout is executed on the same day as the volunteer's login but after the time\n   * that the farm shuts.\n   * 2) The auto-logout is executed after the day on which the volunteer logged in.\n   */\n  autoLogoutUser() {\n    this.sqlitedatabase.listDetailsForAutoLogout()\n      .then((stats) => {\n        var d = new Date(); //Gives the current time and date\n        var currentTimeMS = d.getTime();\n\n        for (var j = 0; j < stats.length; j++) {\n          //Below gives us the date to compare\n          var handledTotalDate = new Date(stats[j].login_time);\n          var handledYear = handledTotalDate.getFullYear();\n          var handledMonth = handledTotalDate.getMonth(); //Month in date format is 0-11\n          var handledDate = handledTotalDate.getDate();\n\n          var logoutTime = new Date(stats[j].logout_time); //Finds if the logout time exists\n\n          if (logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (GMT)\" || logoutTime.toString() === \"Thu Jan 01 1970 00:00:00 GMT+0000 (BST)\") {\n            var logoutBoolean = 0; //If logout time is null, given date Thu Jan 01 1970...\n          } else {\n            logoutBoolean = 1;\n          }\n\n          //Creates a logout date on the same day as the login data for 17:00\n          var dateToSet = new Date();\n          dateToSet.setDate(handledDate);\n          dateToSet.setFullYear(handledYear);\n          dateToSet.setMonth(handledMonth);\n          dateToSet.setHours(16);\n          dateToSet.setMinutes(30, 0, 0);\n\n          console.log(\"Date to set: \" + dateToSet);\n          var dateToSetMS = dateToSet.getTime();\n\n          console.log(\"Time to set: \" + dateToSetMS);\n          var reverseDateTest = new Date(dateToSetMS);\n          console.log(\"Reverse test: \" + reverseDateTest);\n\n          //Logs the user out if it finds the value of logoutBoolean = 0\n          if (currentTimeMS > dateToSetMS && logoutBoolean === 0) {\n            //Logout user at 17:00 of current date, if it is passed that time on the same day\n            this.sqlitedatabase.autoLogout(stats[j].user_id, dateToSetMS)\n              .then(() => {\n\n              }, err => {\n                console.log('Error1: ', err);\n              });\n          } else {\n            console.log(\"Already logged out\");\n          }\n\n\n        }\n      }\n      , err => {\n        console.log(\"something went wrong on auto-logging out users\");\n      });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin-home/admin-home.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { Graph2Page } from '../graph2/graph2';\nimport { Graph4Page } from '../graph4/graph4';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n * helped setup the basics of each graph.\n */\n\n\n@Component({\n  selector: 'page-graph1',\n  templateUrl: 'graph1.html',\n})\nexport class Graph1Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n\n    this.getUniqueVisitsPerYear();\n\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n    * Methods below take user to different forms of the same graph \n    */\n  goToGraph2() {\n    this.navCtrl.push(Graph2Page);\n  }\n\n  goToGraph4() {\n    this.navCtrl.push(Graph4Page);\n  }\n\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n\n  @ViewChild('lineChart') lineChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the number of unique visitors to the farm for every year,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getUniqueVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let uniqueVisitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var uniqueVisitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n\n              for (b = 0; b < uniqueVisitsArray.length; b++) {\n\n                if (uniqueVisitsArray[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArray.push(stats[c].user_id);\n              }\n            }\n          }\n          uniqueVisitsPerYearArray.push(uniqueVisitsArray.length);\n        }\n        for (var d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          } else if (this.maxValue < uniqueVisitsPerYearArray[d]) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          console.log(\"The number of total unique visits for \" + numberOfYears[d] + \" is: \" + uniqueVisitsPerYearArray[d]);\n\n          const answers = {\n            answer: numberOfYears[d],\n            value: uniqueVisitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(uniqueVisitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n        }\n\n        this.createLineChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n  * Methods takes the data defined and creates a chart\n  */\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Unique Visits',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph1/graph1.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { Graph1Page } from '../graph1/graph1';\nimport { Graph4Page } from '../graph4/graph4';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph2',\n  templateUrl: 'graph2.html',\n})\nexport class Graph2Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle');\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getUniqueVisitsPerYear();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraph1() {\n    this.navCtrl.push(Graph1Page);\n  }\n\n  goToGraph4() {\n    this.navCtrl.push(Graph4Page);\n  }\n\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n\n\n  @ViewChild('pieChart') pieChart;\n\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n  * Methods calculates the number of unique visitors to the farm for every year,\n  * contained within the login data. Charts are all dynamic to new data.\n  */\n  getUniqueVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let uniqueVisitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var uniqueVisitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n\n              for (b = 0; b < uniqueVisitsArray.length; b++) {\n\n                if (uniqueVisitsArray[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArray.push(stats[c].user_id);\n              }\n            }\n          }\n          uniqueVisitsPerYearArray.push(uniqueVisitsArray.length);\n        }\n        for (var d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          } else if (this.maxValue < uniqueVisitsPerYearArray[d]) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          console.log(\"The number of total unique visits for \" + numberOfYears[d] + \" is: \" + uniqueVisitsPerYearArray[d]);\n\n          const answers = {\n            answer: numberOfYears[d],\n            value: uniqueVisitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(uniqueVisitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n\n        }\n\n        this.createPieChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n  * Methods takes the data defined and creates a chart\n  */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Unique Visits Per Year',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 60,\n              right: 60,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph2/graph2.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { Graph2Page } from '../graph2/graph2';\nimport { Graph1Page } from '../graph1/graph1';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph4',\n  templateUrl: 'graph4.html',\n})\nexport class Graph4Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getUniqueVisitsPerYear();\n  }\n\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraph1() {\n    this.navCtrl.push(Graph1Page);\n  }\n\n  goToGraph2() {\n    this.navCtrl.push(Graph2Page);\n  }\n\n\n  /**\n   * Chart methodology starts here\n   */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n  ];\n\n  @ViewChild('barChart') barChart;\n\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n\n  /**\n    * Methods calculates the number of unique visitors to the farm for every year,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getUniqueVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let uniqueVisitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var uniqueVisitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n\n              for (b = 0; b < uniqueVisitsArray.length; b++) {\n\n                if (uniqueVisitsArray[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArray.push(stats[c].user_id);\n              }\n            }\n          }\n          uniqueVisitsPerYearArray.push(uniqueVisitsArray.length);\n        }\n        for (var d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          } else if (this.maxValue < uniqueVisitsPerYearArray[d]) {\n            this.maxValue = uniqueVisitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < uniqueVisitsPerYearArray.length; ++d) {\n          console.log(\"The number of total unique visits for \" + numberOfYears[d] + \" is: \" + uniqueVisitsPerYearArray[d]);\n\n          const answers = {\n            answer: numberOfYears[d],\n            value: uniqueVisitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(uniqueVisitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n\n        }\n\n        this.createBarChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n    * Methods takes the data defined and creates a chart\n    */\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Unique Visits Per Year',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph4/graph4.ts","////////////////////////////////////////////////////////////////////////////////////////////////\n/*\nThis file sqlitedabase.ts is adapted from https://devdactic.com/ionic-sqlite-queries-database/\n\n*/\n////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { Platform } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\n\nconst DATABASE_FILENAME: string = 'data.db';\n\n@Injectable()\nexport class sqlitedatabase {\n    // The database is a variable of type SQLiteObject,\n    // not a table, the file that contains the table\n    public db: SQLiteObject = null; //storage the SQLiteObject return by create method\n\n    private answerCache = {};\n    private diversityCache = {};\n\n    constructor(\n        private platform: Platform,\n        private sqlite: SQLite\n    ) {\n        this.platform.ready().then(() => {\n            //call openDB method\n            this.openDB().then(() => {\n                //call createTable method \n                this.createTables();\n            });\n        });\n    }\n\n    public openDB(): Promise<void> {\n        return this.sqlite.create({\n            name: DATABASE_FILENAME,\n            location: 'default'\n        })\n            .then((db: SQLiteObject) => {\n                //storage object to property\n                this.db = db;\n            });\n    }\n\n\n\n\n    /**\n     * This method crates the SQLite database and calles the creatTable() method that will creat the relevant tables in the database. \n     */\n    createDatabaseFile(): void {\n        console.log(\"creating database\")\n        this.sqlite.create({      //creates new database\n            name: 'data.db',\n            location: 'default'\n        }).then((db: SQLiteObject) => {\n            console.log('Database created!')\n            this.db = db;  //assign\n            this.createTables(); //create new tables\n        }).catch(e => console.log(e));\n    }\n\n    /**\n     * This method creates all the SQLite tables that will be used in the app. The sutton_user table to store registration information. \n     * The login_history table to store login data.\n     * The question table to store all the registation questionnaire questions.\n     * The question_response table to store the individual responses from the registration questionnaire questions.\n     * The diversity table to store all the diversity questionnaire questions.\n     * The diversity_response table to store the individual respones from the diversity questionnaire questions. \n     * The last_sync table to store the time stamps of the imported data from registration Google Sheet.\n     * The last_sync2 table to store the time stamps of the imported data from diversity Google Sheet. \n     * \n     * For the last_sync and last_syn2 table, it is verified wether or not the tables are empty. If they are, they are pre-populated with the first data row so that the querry in the google-drive.ts file doesn't result in an error. \n     * The data that is used for pre-population is 1, which is 1 millisecond after the 1st of January 1970 so this should never cause any problems with the timestamps in the Google Sheets as the time stamp never goes back this far. \n     */\n    createTables(): void {\n        var sql = \"CREATE TABLE IF NOT EXISTS sutton_user \\n\\\n                    (   id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                        first_name varchar(32) NOT NULL,\\\n                        last_name varchar(32) NOT NULL,\\\n                        email_address varchar(32) DEFAULT NULL,\\\n                        address varchar(48) DEFAULT NULL,\\\n                        postcode varchar(16) DEFAULT NULL,\\\n                        phone_number varchar(16) DEFAULT NULL,\\\n                        emergency_name varchar(48) DEFAULT NULL,\\\n                        emergency_telephone varchar(16) DEFAULT NULL,\\\n                        emergency_relationship varchar(48) DEFAULT NULL\\\n                    )\";\n\n        this.db\n            .executeSql(sql, {})\n            .then(() => {\n                console.log(\"Created table[sutton_user]\");\n            }).catch(e => console.log(e));\n\n        var sql2 = \"CREATE TABLE IF NOT EXISTS login_history (\\\n                        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                        user_id INTEGER NOT NULL,\\\n                        login_ts BIGINT DEFAULT NULL,\\\n                        logout_ts BIGINT DEFAULT NULL \\\n                      )\";\n\n        this.db\n            .executeSql(sql2, {})\n            .then(() => {\n                console.log(\"Created table[login_history]\");\n            }).catch(e => console.log(e));\n\n\n\n        // Questions\n        var sql_question_table = \"CREATE TABLE IF NOT EXISTS question (\\\n                                      id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                                      question_text TEXT NOT NULL,\\\n                                      position INTEGER NOT NULL,\\\n                                      enabled TINYINT NOT NULL\\\n                                    )\";\n\n        var sql_question_response_table = \"CREATE TABLE IF NOT EXISTS question_response (\\\n                                      id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                                      question_id INTEGER NOT NULL,\\\n                                      option_id INTEGER NULL,\\\n                                      option_text TEXT NULL,\\\n                                      user_id INTEGER NOT NULL,\\\n                                      recorded_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\\\n                                    )\";\n\n        var sql_diversity_table = \"CREATE TABLE IF NOT EXISTS diversity (\\\n                                      id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                                      question_text TEXT NOT NULL,\\\n                                      position INTEGER NOT NULL,\\\n                                      enabled TINYINT NOT NULL\\\n                                    )\";\n\n\n        var sql_diversity_response_table = \"CREATE TABLE IF NOT EXISTS diversity_response (\\\n                                      id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                                      question_id INTEGER NOT NULL,\\\n                                      option_text TEXT NOT NULL,\\\n                                      recorded_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\\\n                                    )\";\n\n        this.db\n            .executeSql(sql_question_table, {})\n            .then(() => {\n                console.log(\"Created table[question_table]\");\n                this.insertQuestions();\n            }).catch(e => console.log(e));\n\n        this.db\n            .executeSql(sql_question_response_table, {})\n            .then(() => {\n                console.log(\"Created table[question_response_table]\");\n            }).catch(e => console.log(e));\n\n        this.db\n            .executeSql(sql_diversity_table, {})\n            .then(() => {\n                console.log(\"Created table[diversity_table]\");\n                this.insertDiversityQuestions();\n            }).catch(e => console.log(e));\n\n        this.db\n            .executeSql(sql_diversity_response_table, {})\n            .then(() => {\n                console.log(\"Created table[diversity_response_table]\");\n            }).catch(e => console.log(e));\n\n\n        var last_sync_table = \"CREATE TABLE IF NOT EXISTS last_sync_table (\\\n                id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                last_sync BIGINT NOT NULL)\";\n\n        this.db\n            .executeSql(last_sync_table, {})\n            .then(() => {\n                console.log(\"Created table[last_sync_table]\");\n                let new_sql = 'SELECT max(id) as count from last_sync_table';\n                this.db.executeSql(new_sql, []).then((data) => {\n                    console.log(\"querry output:  \" + data.rows.item(0).count);\n                    if (parseInt(data.rows.item(0).count) > 0) {\n                        console.log(\"last_sync_table NOT empty\")\n                    }\n                    else {\n                        this.setLastSync(\"1\");\n                        console.log(\"last_sync_table empty, adding first value\")\n                    }\n                });\n            }).catch(e => console.log(e));\n\n\n\n        var last_sync_table2 = \"CREATE TABLE IF NOT EXISTS last_sync_table2 (\\\n                id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\\\n                last_sync BIGINT NOT NULL)\";\n\n        this.db\n            .executeSql(last_sync_table2, {})\n            .then(() => {\n                console.log(\"Created table[last_sync_table2]\");\n                let new_sql = 'SELECT max(id) as count from last_sync_table2';\n                this.db.executeSql(new_sql, []).then((data) => {\n                    console.log(\"querry output:  \" + data.rows.item(0).count);\n                    if (parseInt(data.rows.item(0).count) > 0) {\n                        console.log(\"last_sync_table2 NOT empty\")\n                    }\n                    else {\n                        this.setLastSync2(\"1\");\n                        console.log(\"last_sync_table2 empty, adding first value\")\n                    }\n                });\n            }).catch(e => console.log(e));\n\n\n    }\n\n\n\n\n\n\n\n\n\n    /**\n     * This method adds new data to the sutton_user table from an array.  \n     * @param data \n     */\n    registerUser(data): Promise<any> {\n        var sql = \"insert into sutton_user(\\\n                        first_name, last_name, \\\n                        email_address, \\\n                        phone_number, \\\n                        address, postcode, \\\n                        emergency_name,\\\n                        emergency_telephone,\\\n                        emergency_relationship\\\n                    ) values (?,?,?,?,?,?,?,?,?); SELECT last_insert_rowid()\";\n        var values = [\n            data[\"first_name\"],\n            data[\"last_name\"],\n            data[\"email_address\"],\n            data[\"phone_number\"],\n            data[\"address\"],\n            data[\"postcode\"],\n            data[\"emergency_name\"],\n            data[\"emergency_telephone\"],\n            data[\"emergency_relationship\"]\n        ];\n\n        return this.db.executeSql(sql, values);\n    }\n\n    /**\n     * Suggestion for listing the user name based on last name\n     * @param query\n     */\n    suggestLastName(query): Promise<any> {\n        return this.db.executeSql(\"select * from sutton_user where last_name like '%\" + query + \"%' limit 5\", []);\n    }\n\n    /**\n     * This method returns when the user last logged in. \n     * @param user_id \n     */\n    last_login(user_id): Promise<any> {\n        let sql = \"select * from login_history where user_id=? order by id desc limit 1\";\n        let parameters = [user_id];\n        return this.db.executeSql(sql, parameters);\n    }\n\n    /**\n     * This method adds a login entry to the login_history table in the SQLite database. \n     * @param user_id \n     */\n    login(user_id): Promise<void> {\n        let sql = \"insert into login_history(\\\n                        user_id, login_ts \\\n                    ) values (?,?)\";\n        let parameters = [user_id, Date.now()];\n        return this.db.executeSql(sql, parameters);\n    }\n\n    /**\n     * Update logout time to database\n     */\n    logout(user_id): Promise<void> {\n        console.log(\"logout user:\" + user_id);\n        let sql = \"UPDATE login_history \\\n                        SET logout_ts=? \\\n                    WHERE user_id=?\";\n        let parameters = [Date.now(), user_id];\n        return this.db.executeSql(sql, parameters);\n    }\n\n\n\n\n\n    /**\n     * This method populates the 'diversity' table with all the questions of the diversity questionnaire. \n     */\n    insertDiversityQuestions() {\n\n\n        let question1 = \"Age category\";\n        let question2 = \"Sex\";\n        let question3 = \"Sexual orientation. Are you...\";\n        let question4 = \"Ethnicity. Are you...\";\n        let question5 = \"Disability: are your day-to-day activities limited because of\\\n                a health problem or disability which has lasted,\\\n                or is expected to last, at least 12 months?\";\n        let question6 = \"Caring responsibilities: do you regularly provide unpaid\\\n             support caring for someone? [A carer is someone who spends a\\\n                significant proportion of their time providing unpaid support\\\n                to a family member, partner or friend who is ill, frail,\\\n                disabled or has mental health or substance misuse problems]\";\n        let question7 = \"Religion or belief: are you or do you have...\";\n        let question8 = \"Current employment status\"\n        let question9 = \"Which London borough do you live in?\"\n        let sql = \"INSERT INTO diversity ( id, question_text, position, enabled ) \\\n                            VALUES (?, ?, ?, 1)\";\n\n        this.db.executeSql(sql, [1, question1, 1]);\n        this.db.executeSql(sql, [2, question2, 2]);\n        this.db.executeSql(sql, [3, question3, 3]);\n        this.db.executeSql(sql, [4, question4, 4]);\n        this.db.executeSql(sql, [5, question5, 5]);\n        this.db.executeSql(sql, [6, question6, 6]);\n        this.db.executeSql(sql, [7, question7, 7]);\n        this.db.executeSql(sql, [8, question8, 8]);\n        this.db.executeSql(sql, [9, question9, 9]);\n\n    }\n\n\n\n\n\n\n    // login history\n    loginHistory(): Promise<any> {\n        let sql = \"SELECT sutton_user.id as id, first_name, last_name, email_address, login_ts\\\n                       FROM sutton_user INNER JOIN login_history ON sutton_user.id=login_history.user_id limit 20\";\n        return this.db.executeSql(sql, []);\n    }\n\n    // total attendance\n    totalAttendance(): Promise<any> {\n        let sql = \"SELECT age_group, count(login_history.user_id) as count \\\n                       FROM sutton_user INNER JOIN login_history ON sutton_user.id=login_history.user_id group by age_group\";\n        return this.db.executeSql(sql, []);\n    }\n\n    // Total Number of visiters per year\n    totalVisitorsYear(): Promise<any> {\n        let sql = \"SELECT age_group, count(login_history.user_id) as count \\\n                       FROM sutton_user INNER JOIN login_history ON sutton_user.id=login_history.user_id\";\n        return this.db.executeSql(sql, []);\n    }\n\n    // total registered\n    totalRegistered(): Promise<any> {\n        let sql = \"SELECT age_group, count(*) as count \\\n                       FROM sutton_user\";\n        return this.db.executeSql(sql, []);\n    }\n\n\n    // Admin login credentials\n    adminCredentials(username): Promise<any> {\n        let sql = \"select * from admin where username=?\";\n        return this.db.executeSql(sql, [username]);\n    }\n\n    /**\n * This method populates the 'question' table with all the questions of the registration questionnaire. \n */\n    insertQuestions() {\n\n\n        let question1 = \"Please tick the volunteering activities you are interested in.*\\\n        Tick all that apply.\";\n        let question2 = \"Please tell us why you would like to volunteer at Sutton Community Farm.*\\\n         Tick all that apply.\";\n        let question3 = \"Please tick the statements applicable to you.* This helps us \\\n        understand how much support you might require with activities.\";\n        let question4 = \"Please add any further information about the support you\\\n          require. Include whether you are coming with a support\\\n          worker.\";\n        let question5 = \"Do you have any medical conditions, allergies, disabilities\\\n          or existing injuries that may affect participation? Our staff\\\n          will discuss this with you in a sensitive and\\\n          confidential manner.*\";\n        let question6 = \"Do you have a particular interest in supporting other\\\n          volunteers at the farm as a Buddy Volunteer?\\\n          This would require additional training\";\n\n        let question7 = \"To help keep in touch with the farm community, would you like\\\n          to be added to our Google Group? You can leave anytime.\";\n        let question8 = \"Where did you hear about Sutton Community Farm?*\";\n        let question9 = \"Please tick which days you are able to volunteer.*\";\n\n\n        let sql = \"INSERT INTO question ( id, question_text, position, enabled ) \\\n    \t\t\t\tVALUES (?, ?, ?, 1)\";\n\n        this.db.executeSql(sql, [1, question1, 1]);\n        this.db.executeSql(sql, [2, question2, 2]);\n        this.db.executeSql(sql, [3, question3, 3]);\n        this.db.executeSql(sql, [4, question4, 4]);\n        this.db.executeSql(sql, [5, question5, 5]);\n        this.db.executeSql(sql, [6, question6, 6]);\n        this.db.executeSql(sql, [7, question7, 7]);\n        this.db.executeSql(sql, [8, question8, 8]);\n        this.db.executeSql(sql, [9, question9, 9]);\n\n    }\n\n    /**\n     * This method querries the question table for a certain row based  on the input position. \n     * @param position \n     */\n    getQuestion(position: number): Promise<any> {\n        let sql = \"select * from question where position = ? order by id desc limit 1\";\n        let params = [position];\n        return this.db.executeSql(sql, params);\n    }\n\n    /**\n     * This method querries the last_sync table for the last time stamp. \n     */\n    getLastSync(): Promise<any> {\n        let sql = \"SELECT * FROM last_sync_table ORDER BY id DESC LIMIT 1\"\n        return this.db.executeSql(sql, []);\n    }\n\n    /**\n        * This method querries the last_sync2 table for the last time stamp. \n        */\n    getLastSync2(): Promise<any> {\n        let sql = \"SELECT * FROM last_sync_table2 ORDER BY id DESC LIMIT 1\"\n        return this.db.executeSql(sql, []);\n    }\n\n    /**\n    * This method adds a new data row to the last_sync table. \n    */\n    setLastSync(lastSync): Promise<any> {\n        console.log(\"last sync set\")\n        let sql = \"insert into last_sync_table(last_sync) values (?);\"\n        return this.db.executeSql(sql, [lastSync])\n\n    }\n\n\n    /**\n    * This method adds a new data row to the last_sync2 table. \n    */\n    setLastSync2(lastSync): Promise<any> {\n        console.log(\"last sync2 set\")\n        let sql = \"insert into last_sync_table2(last_sync) values (?);\"\n        return this.db.executeSql(sql, [lastSync])\n\n    }\n\n    /**\n         * This method querries the diversity table for a certain row based  on the input position. \n         * @param position \n         */\n    getDiversityQuestion(position: number): Promise<any> {\n        let sql = \"select * from diversity where position = ? order by id desc limit 1\";\n        let params = [position];\n        return this.db.executeSql(sql, params);\n    }\n\n    /**\n     * This method inserts all the data stored inside the registration questionnaire cache object for a specific user_id. \n     * @param user_id \n     */\n    insertCachedAnswers(user_id: number) {\n        console.log(\"Inserting cached answers for user:\" + user_id);\n        let insert_sql = \"INSERT INTO question_response (\\\n    \t\t\t\t\t\tuser_id, question_id, option_text )\\\n\t\t\t\t\t\t\tVALUES (?, ?, ?)\";\n        for (let question_key in this.answerCache) {\n            console.log(\"question_key:\" + question_key);\n            let answers = this.answerCache[question_key];\n            console.log(answers);\n            for (let index in answers) {\n                let answer = answers[index];\n                console.log(\"answer:\" + answer);\n                let params = [user_id, question_key, answer];\n                this.db.executeSql(insert_sql, params).then(() => {\n                    console.log(\"inserted question response:\" + question_key + \":\" + answer);\n                });\n            }\n        }\n    }\n\n\n\n    /**\n        * This method inserts all the data stored inside the diversity questionnaire cache object.\n        * @param user_id \n        */\n    insertDiversityCache() {\n        console.log(\"Inserting cached diversity answers\");\n        let insert_sql = \"INSERT INTO diversity_response (\\\n                              question_id, option_text )\\\n                              VALUES (?, ?)\";\n        for (let question_key in this.diversityCache) {\n            console.log(\"question_key:\" + question_key);\n            let answers = this.diversityCache[question_key];\n            console.log(answers);\n            for (let index in answers) {\n                let answer = answers[index];\n                console.log(\"answer:\" + answer);\n                let params = [question_key, answer];\n                this.db.executeSql(insert_sql, params).then(() => {\n                    console.log(\"inserted question response:\" + question_key + \":\" + answer);\n                });\n            }\n        }\n    }\n\n\n\n    /**\n     * This method is used to in testing. It querries all the elements in the question_reponse table and counts the number of identical entries. \n     */\n    listAllStats(): Promise<any> {\n        let sql = \"select user_id, recorded_at, question_id, option_text, count(*) as count  \\\n                from question_response \\\n                group by question_id, option_text\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            user_id: data.rows.item(i).user_id,\n                            recorded_at: data.rows.item(i).recorded_at,\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text,\n                            count: data.rows.item(i).count\n                        });\n                    }\n                }\n\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * This method is used to in producing a csv of the questionnaire data. \n     */\n    listAllStats2(): Promise<any> {\n        let sql = \"select user_id, recorded_at, question_id, option_text, count(*) as count  \\\n                  from question_response \\\n                  group by question_id, option_text\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text,\n                            count: data.rows.item(i).count\n                        });\n                    }\n                }\n\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n\n    /**\n     * This method adds a key:value pair to the asnwerCache object. \n     * @param question_id \n     * @param answerList \n     */\n    addToAnswerCache(question_id: number, answerList) {\n        this.answerCache[question_id] = answerList;\n    }\n\n    /**\n     * This method deletes a specific key:value pair from the answerCache object. \n     * @param question_id \n     */\n    clearAnswerCache(question_id: number) {\n        delete this.answerCache[question_id];\n    }\n\n    /**\n     * This method is used in testing. It outputs the contents of the answerCache object to the console. \n     */\n    logAnswerCache() {\n        console.log(JSON.stringify(this.answerCache));\n    }\n\n    /**\n     * This method adds a key:value pair to the diveristyCache object. \n     * @param question_id \n     * @param answerList \n     */\n    addToDiversityCache(question_id: number, answerList) {\n        this.diversityCache[question_id] = answerList;\n    }\n\n    /**\n    * This method deletes a specific key:value pair from the diversityCache object. \n    * @param question_id \n    */\n    clearDiversityCache(question_id: number) {\n        delete this.diversityCache[question_id];\n    }\n\n    /**\n    * This method is used in testing. It outputs the contents of the diversityCache object to the console. \n    */\n    logDiversityCache() {\n        console.log(JSON.stringify(this.diversityCache));\n    }\n\n    /**\n     * This method is used in  testing. It querries all the elements from the diveristy_response table and groups them by identical entries. \n     */\n    listAllDiversity(): Promise<any> {\n        let sql = \"select recorded_at, question_id, option_text, count(*) as count  \\\n        from diversity_response \\\n        group by question_id, option_text\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            recorded_at: data.rows.item(i).recorded_at,\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text,\n                            count: data.rows.item(i).count\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * This method is used in producing a csv of all diversity questionnaire data responses. \n     */\n    listAllDiversity2(): Promise<any> {\n        let sql = \"select recorded_at, question_id, option_text, count(*) as count  \\\n        from diversity_response \\\n        group by question_id, option_text\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text,\n                            count: data.rows.item(i).count\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n\n    /**\n     * Method provides the grpahs with the entire catalogue of login data,\n     * so that graphs can be made dating as far back as records go.\n     */\n    listLoginDetailsForGraphs(): Promise<any> {\n        let sql = \"select user_id, login_ts\\\n        from login_history\\\n        \";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            user_id: data.rows.item(i).user_id,\n                            login_time: data.rows.item(i).login_ts,\n                        });\n                    }\n                }\n                console.log((stats));\n                console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * Method provides the table with the entire catalogue of login data.\n     * Data is to be visualised tabularly and an option is also provided\n     * to download the data onto the device.\n     */\n    listLoginDetailsForTable(): Promise<any> {\n        let sql = \"SELECT sutton_user.id as id, first_name, last_name, email_address, login_ts, logout_ts\\\n        FROM sutton_user INNER JOIN login_history ON sutton_user.id=login_history.user_id\\\n        \";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            first_name: data.rows.item(i).first_name,\n                            last_name: data.rows.item(i).last_name,\n                            email_address: data.rows.item(i).email_address,\n                            login_time: new Date(data.rows.item(i).login_ts),\n                            logout_time: new Date(data.rows.item(i).logout_ts)\n                        });\n\n                    }\n                }\n                console.log((stats));\n                console.log(JSON.stringify(stats));\n                return (stats);\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * Method to provide function with login and logout data to determine whether a \n     * volunteer has forgotten to logout and, thus, needs to be logged out\n     * automatically\n     */\n    listDetailsForAutoLogout(): Promise<any> {\n        let sql = \"select user_id, login_ts, logout_ts\\\n        from login_history\\\n        \";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            user_id: data.rows.item(i).user_id,\n                            login_time: data.rows.item(i).login_ts,\n                            logout_time: data.rows.item(i).logout_ts,\n                        });\n                    }\n                }\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * Update logout time to database if the user forgets to logout and the day ends\n     */\n    autoLogout(user_id, dateToSetMS): Promise<void> {\n        console.log(\"Auto logout user: \" + user_id + \" at time: \" + dateToSetMS);\n        let sql = \"UPDATE login_history \\\n                        SET logout_ts=? \\\n                    WHERE user_id=?\";\n        let parameters = [dateToSetMS, user_id];\n        console.log(parameters);\n        return this.db.executeSql(sql, parameters);\n    }\n\n    /**\n     * This method is used for testing. It querries all data entries from the login_history table. \n     */\n    listAllLog(): Promise<any> {\n        let sql = \"select user_id, login_ts, logout_ts\\\n        from login_history\\\n        group by user_id\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            user_id: data.rows.item(i).user_id,\n                            login_time: data.rows.item(i).login_ts,\n                            logout_time: data.rows.item(i).logout_ts\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n\n    /**\n     * This method is used for testing. It querries all data entries from the sutton_user table. \n     */\n    listAllRegistration(): Promise<any> {\n        let sql = \"select * from sutton_user\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            user_id: data.rows.item(i).id.toString(),\n                            first_name: data.rows.item(i).first_name,\n                            last_name: data.rows.item(i).last_name,\n                            email_address: data.rows.item(i).email_address,\n                            phone_number: data.rows.item(i).phone_number,\n                            address: data.rows.item(i).address,\n                            postcode: data.rows.item(i).postcode,\n                            emergency_name: data.rows.item(i).emergency_name,\n                            emergency_telephone: data.rows.item(i).emergency_telephone,\n                            emergency_relationship: data.rows.item(i).emergency_relationship\n\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                //console.log(\"------------------\");\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * This method clears the sutton_user table including the auto-incrementing field. \n     */\n    clearRegistrationDb(): Promise<any> {\n\n        console.log(\"clearRegistrationDB function called\");\n        let sql = \"delete from sutton_user\";\n        let sql2 = \"delete from sqlite_sequence where name='sutton_user'\"\n        return this.db.executeSql(sql, {})\n            .then(() => {\n                console.log(\"sutton_user  table reset to zero\");\n\n\n                return this.db.executeSql(sql2, {})\n                    .then(() => {\n                        console.log(\"sutton_user autoincrement reset to zero\");\n                    }).catch(e => console.log(e));\n\n            }).catch(e => console.log(e));\n\n\n    }\n\n    /**\n     * This method adds data from an array to the sutton_user table. \n     * @param data \n     */\n    registerUserFromDB(data): Promise<any> {\n        var sql = \"insert into sutton_user(\\\n                        id, first_name, last_name, \\\n                        email_address, \\\n                        phone_number, \\\n                        address, postcode, \\\n                        emergency_name,\\\n                        emergency_telephone,\\\n                        emergency_relationship\\\n                    ) values (?,?,?,?,?,?,?,?,?,?)\";\n        var values = [\n            data[0],\n            data[1],\n            data[2],\n            data[3],\n            data[4],\n            data[5],\n            data[6],\n            data[7],\n            data[8],\n            data[9]\n        ];\n\n        return this.db.executeSql(sql, values).catch(e => console.log(e));\n    }\n\n    /**\n     * This method querries all the rows from the question_response table. It is used in the admin-home.ts file and for testing purposes. \n     */\n    listAllStatsNoCount(): Promise<any> {\n        let sql = \"select id, user_id, recorded_at, question_id, option_text  \\\n                  from question_response\\\n                  order by user_id, question_id\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            id: data.rows.item(i).id,\n                            user_id: data.rows.item(i).user_id,\n                            recorded_at: data.rows.item(i).recorded_at,\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text,\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n\n    /**\n    * This method clears the question_response table including the auto-incrementing field. \n    */\n    clearRegistrationQuestionnaireDB(): Promise<any> {\n\n        console.log(\"clearRegistrationQuestionnaireDB function called\");\n        let sql = \"delete from question_response\";\n        let sql2 = \"delete from sqlite_sequence where name='question_response'\"\n        return this.db.executeSql(sql, {})\n            .then(() => {\n                console.log(\"question_response  table reset to zero\");\n\n\n                return this.db.executeSql(sql2, {})\n                    .then(() => {\n                        console.log(\"question_response autoincrement reset to zero\");\n                    }).catch(e => console.log(e));\n\n            }).catch(e => console.log(e));\n\n\n    }\n\n\n    /**\n    * This method clears the login_history table including the auto-incrementing field. \n    */\n    clearLoginHistoryDB(): Promise<any> {\n\n        console.log(\"clearLoginHistoryDB function called\");\n        let sql = \"delete from login_history\";\n        let sql2 = \"delete from sqlite_sequence where name='login_history'\"\n        return this.db.executeSql(sql, {})\n            .then(() => {\n                console.log(\"login_history  table reset to zero\");\n\n\n                return this.db.executeSql(sql2, {})\n                    .then(() => {\n                        console.log(\"login_history autoincrement reset to zero\");\n                    }).catch(e => console.log(e));\n\n            }).catch(e => console.log(e));\n\n\n    }\n\n\n    /**\n    * This method clears the diversity_response table including the auto-incrementing field. \n    */\n    clearDiversityQuestionnaireDB(): Promise<any> {\n\n        console.log(\"clearDiversityQuestionnaireDB function called\");\n        let sql = \"delete from diversity_response\";\n        let sql2 = \"delete from sqlite_sequence where name='diversity_response'\"\n        return this.db.executeSql(sql, {})\n            .then(() => {\n                console.log(\"diversity_response  table reset to zero\");\n\n\n                return this.db.executeSql(sql2, {})\n                    .then(() => {\n                        console.log(\"diversity_response autoincrement reset to zero\");\n                    }).catch(e => console.log(e));\n\n            }).catch(e => console.log(e));\n\n\n    }\n\n\n    /**\n  * This method querries all the rows from the diversity_response table. It is used in the admin-home.ts file and for testing purposes. \n  */\n    listAllDiversityNoCount(): Promise<any> {\n        let sql = \"select id, recorded_at, question_id, option_text\\\n        from diversity_response\\\n        order by recorded_at, question_id\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            id: data.rows.item(i).id,\n                            recorded_at: data.rows.item(i).recorded_at,\n                            question_id: data.rows.item(i).question_id,\n                            response: data.rows.item(i).option_text\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n\n\n    /**\n     * Thie method querries all the data entries from the last_sync table. It is used for testing purposes. \n     */\n    listLastSync(): Promise<any> {\n        let sql = \"select * from last_sync_table\";\n        let stats = [];\n        return this.db.executeSql(sql, [])\n            .then(\n            (data) => {\n                //console.log(JSON.stringify(data));\n                if (data.rows.length > 0) {\n                    for (var i = 0; i < data.rows.length; i++) {\n                        stats.push({\n                            id: data.rows.item(i).id,\n                            date: data.rows.item(i).last_sync,\n                        });\n                    }\n                }\n                //console.log(JSON.stringify(stats));\n                return stats;\n            },\n            err => {\n                console.log('Error: ', err);\n                return [];\n            });\n    }\n\n    /**\n     * This method adds data from an array to the login_history table. \n     * @param data \n     */\n    addLoginDataToDB(data): Promise<any> {\n        var sql = \"insert into login_history(\\\n                        id, user_id, \\\n                        login_ts, \\\n                        logout_ts\\\n                    ) values (?,?,?,?)\";\n        var values = [\n            data[0],\n            data[1],\n            data[2],\n            data[3]\n        ];\n\n        return this.db.executeSql(sql, values).catch(e => console.log(e));\n    }\n\n\n    /**\n       * This method adds data from an array to the question_response table. \n       * @param data \n       */\n    addRegistrationQuestionnaireToDB(data): Promise<any> {\n        var sql = \"insert into question_response(\\\n                        id, user_id, \\\n                        recorded_at, \\\n                        question_id, option_text\\\n                    ) values (?,?,?,?,?)\";\n        var values = [\n            data[0],\n            data[1],\n            data[2],\n            data[3],\n            data[4]\n        ];\n\n        return this.db.executeSql(sql, values).catch(e => console.log(e));\n    }\n\n    /**\n       * This method adds data from an array to the diversity_response table. \n       * @param data \n       */\n    addDiversityQuestionnaireToDB(data): Promise<any> {\n        var sql = \"insert into diversity_response(\\\n                        id,\\\n                        recorded_at,\\\n                        question_id, option_text\\\n                    ) values (?,?,?,?)\";\n        var values = [\n            data[0],\n            data[1],\n            data[2],\n            data[3],\n        ];\n\n        return this.db.executeSql(sql, values).catch(e => console.log(e));\n    }\n\n    /**\n     * This method resets the answerCache object. \n     */\n    resetAnswerCache() {\n        this.answerCache = {};\n    }\n\n    /**\n     * This method resets the diversityCache object. \n     */\n    resetDiversityCache() {\n        this.diversityCache = {};\n    }\n\n\n\n\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sqlitedatabase/sqlitedatabase.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphScatter1Page } from '../graph-scatter1/graph-scatter1';\nimport { GraphBar1Page } from '../graph-bar1/graph-bar1';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph3',\n  templateUrl: 'graph3.html',\n})\nexport class Graph3Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n    this.getTotalVisitsPerYear();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter1() {\n    this.navCtrl.push(GraphScatter1Page);\n  }\n\n  goToGraphBar1() {\n    this.navCtrl.push(GraphBar1Page);\n  }\n\n  @ViewChild('pieChart') pieChart;\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of visitors to the farm for every year,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalVisitsPerYear() {\n    console.log(\"Getting total number of visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let visitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var visitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n              visitsArray.push(currentUserID);\n\n            }\n          }\n          visitsPerYearArray.push(visitsArray.length);\n        }\n\n        for (var d = 0; d < visitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsPerYearArray[d];\n          } else if (this.maxValue < visitsPerYearArray[d]) {\n            this.maxValue = visitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < visitsPerYearArray.length; ++d) {\n          console.log(\"The total number of visits for \" + numberOfYears[d] + \" is: \" + + visitsPerYearArray[d]);\n          const answers = {\n            answer: numberOfYears[d],\n            value: visitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(visitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n\n        }\n        this.createPieChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n\n  /**\n    * Methods takes the data defined and creates a chart\n    */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Visits Per Year',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 50,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph3/graph3.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { Graph3Page } from '../graph3/graph3';\nimport { GraphBar1Page } from '../graph-bar1/graph-bar1';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-scatter1',\n  templateUrl: 'graph-scatter1.html',\n})\nexport class GraphScatter1Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n    this.getTotalVisitsPerYear();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n    * This method takes user back to list of all graphs\n    */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphBar1() {\n    this.navCtrl.push(GraphBar1Page);\n  }\n\n  goToGraph3() {\n    this.navCtrl.push(Graph3Page);\n  }\n\n\n  /**\n  * Chart methodology starts here\n  */\n\n  @ViewChild('lineChart') lineChart;\n\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of visitors to the farm for every year,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalVisitsPerYear() {\n    console.log(\"Getting total number of visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let visitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var visitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n              visitsArray.push(currentUserID);\n\n            }\n          }\n          visitsPerYearArray.push(visitsArray.length);\n        }\n\n        for (var d = 0; d < visitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsPerYearArray[d];\n          } else if (this.maxValue < visitsPerYearArray[d]) {\n            this.maxValue = visitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < visitsPerYearArray.length; ++d) {\n          console.log(\"The total number of visits for \" + numberOfYears[d] + \" is: \" + + visitsPerYearArray[d]);\n          const answers = {\n            answer: numberOfYears[d],\n            value: visitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(visitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n\n        }\n        this.createLineChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n    * Methods takes the data defined and creates a chart\n    */\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Visits Per Year',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-scatter1/graph-scatter1.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { Graph3Page } from '../graph3/graph3';\nimport { GraphScatter1Page } from '../graph-scatter1/graph-scatter1';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n@Component({\n  selector: 'page-graph-bar1',\n  templateUrl: 'graph-bar1.html',\n})\nexport class GraphBar1Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getTotalVisitsPerYear();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter1() {\n    this.navCtrl.push(GraphScatter1Page);\n  }\n\n  goToGraph3() {\n    this.navCtrl.push(Graph3Page);\n  }\n\n  /**\n  * Chart methodology starts here\n  */\n\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)'\n  ];\n\n  @ViewChild('pieChart') pieChart;\n  @ViewChild('barChart') barChart;\n  @ViewChild('lineChart') lineChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of visitors to the farm for every year,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalVisitsPerYear() {\n    console.log(\"Getting total number of visits per year\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let numberOfYears = [] //this is the array to contain the unique user ID's\n        let visitsPerYearArray = []\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          var currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          for (var b = 0; b < numberOfYears.length; b++) {\n            if (numberOfYears[b] === currentYear) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            numberOfYears.push(currentYear); //Adds the year if it isn't already contained\n          }\n        }\n\n        //Step 2\n        for (var a = 0; a < numberOfYears.length; ++a) {\n          var currentYearFromArray = numberOfYears[a];\n          var visitsArray = []\n\n          for (var c = 0; c < stats.length; ++c) {\n            currentDateHandled = new Date(stats[c].login_time);\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            booleanCheck = 0;\n\n            if (currentYear === currentYearFromArray) {\n              var currentUserID = stats[c].user_id;\n              visitsArray.push(currentUserID);\n\n            }\n          }\n          visitsPerYearArray.push(visitsArray.length);\n        }\n\n        for (var d = 0; d < visitsPerYearArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsPerYearArray[d];\n          } else if (this.maxValue < visitsPerYearArray[d]) {\n            this.maxValue = visitsPerYearArray[d];\n          }\n        }\n\n        for (d = 0; d < visitsPerYearArray.length; ++d) {\n          console.log(\"The total number of visits for \" + numberOfYears[d] + \" is: \" + + visitsPerYearArray[d]);\n          const answers = {\n            answer: numberOfYears[d],\n            value: visitsPerYearArray[d],\n            color: this.chart_colors[d],\n            hover: this.hover_colors[d]\n          };\n          this.chartLabels.push(numberOfYears[d]);\n          this.chartValues.push(visitsPerYearArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n\n          this.answers.push(answers);\n          console.log(this.answers);\n\n\n        }\n        this.createBarChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n  * Methods takes the data defined and creates a chart\n  */\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Visits Per Year',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-bar1/graph-bar1.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie2Page } from '../graph-pie2/graph-pie2';\nimport { GraphBar2Page } from '../graph-bar2/graph-bar2';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-scatter2',\n  templateUrl: 'graph-scatter2.html',\n})\nexport class GraphScatter2Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getTotalUniqueVisits();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphPie2() {\n    this.navCtrl.push(GraphPie2Page);\n  }\n  goToGraphBar2() {\n    this.navCtrl.push(GraphBar2Page);\n  }\n\n  /**\n   * Chart methodology starts here\n   */\n  @ViewChild('lineChart') lineChart;\n\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalUniqueVisits() {\n    console.log(\"Getting total number of unique visits\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let uniqueVisits = [] //this is the array to contain the unique user ID's\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          for (var b = 0; b < uniqueVisits.length; b++) {\n            if (uniqueVisits[b] === stats[j].user_id) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            uniqueVisits.push(stats[j].user_id);\n          }\n\n        }\n\n        console.log(uniqueVisits.length);\n\n        this.maxValue = uniqueVisits.length;\n        this.chartLabels.push('Total Number of Unique Visits');\n        this.chartValues.push(uniqueVisits.length);\n        this.chartColours.push(this.chart_colors[0]);\n        this.chartHoverColours.push(this.hover_colors[0]);\n\n        this.createLineChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n\n  /**\n * Methods takes the data defined and creates a chart\n */\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Unique Visits',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-scatter2/graph-scatter2.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphBar2Page } from '../graph-bar2/graph-bar2';\nimport { GraphScatter2Page } from '../graph-scatter2/graph-scatter2';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-pie2',\n  templateUrl: 'graph-pie2.html',\n})\nexport class GraphPie2Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getTotalUniqueVisits();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter2() {\n    this.navCtrl.push(GraphScatter2Page);\n  }\n\n  goToGraphBar2() {\n    this.navCtrl.push(GraphBar2Page);\n  }\n\n  /**\n    * Chart methodology starts here\n    */\n  @ViewChild('pieChart') pieChart;\n\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalUniqueVisits() {\n    console.log(\"Getting total number of unique visits\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let uniqueVisits = [] //this is the array to contain the unique user ID's\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          for (var b = 0; b < uniqueVisits.length; b++) {\n            if (uniqueVisits[b] === stats[j].user_id) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            uniqueVisits.push(stats[j].user_id);\n          }\n\n        }\n\n        console.log(uniqueVisits.length);\n\n        this.chartLabels.push('Total Number of Unique Visits');\n        this.chartValues.push(uniqueVisits.length);\n        this.chartColours.push(this.chart_colors[0]);\n        this.chartHoverColours.push(this.hover_colors[0]);\n\n        this.createPieChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Unique Visits',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 60,\n              right: 60,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-pie2/graph-pie2.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie2Page } from '../graph-pie2/graph-pie2';\nimport { GraphScatter2Page } from '../graph-scatter2/graph-scatter2';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-bar2',\n  templateUrl: 'graph-bar2.html',\n})\nexport class GraphBar2Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getTotalUniqueVisits();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter2() {\n    this.navCtrl.push(GraphScatter2Page);\n  }\n\n  goToGraphPie2() {\n    this.navCtrl.push(GraphPie2Page);\n  }\n\n\n\n  /**\n * Chart methodology starts here\n */\n  @ViewChild('barChart') barChart;\n\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)'\n  ];\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm,\n    * contained within the login data. Charts are all dynamic to new data.\n    */\n  getTotalUniqueVisits() {\n    console.log(\"Getting total number of unique visits\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        let uniqueVisits = [] //this is the array to contain the unique user ID's\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        for (var j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          for (var b = 0; b < uniqueVisits.length; b++) {\n            if (uniqueVisits[b] === stats[j].user_id) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n          if (booleanCheck === 0) {\n            uniqueVisits.push(stats[j].user_id);\n          }\n\n        }\n\n        console.log(uniqueVisits.length);\n\n        this.maxValue = uniqueVisits.length;\n        this.chartLabels.push('Total Number of Unique Visits');\n        this.chartValues.push(uniqueVisits.length);\n        this.chartColours.push(this.chart_colors[0]);\n        this.chartHoverColours.push(this.hover_colors[0]);\n\n        this.createBarChart();\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n\n\n  /**\n* Methods takes the data defined and creates a chart\n*/\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Unique Visits',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-bar2/graph-bar2.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie3Page } from '../graph-pie3/graph-pie3';\nimport { GraphBar3Page } from '../graph-bar3/graph-bar3';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-scatter3',\n  templateUrl: 'graph-scatter3.html',\n})\nexport class GraphScatter3Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getUniqueVisitsPerMonth();\n  }\n\n  /**\n     * This method opens the homepage.\n     */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n     * This method takes user back to list of all graphs\n     */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n    * Methods below take user to different forms of the same graph \n    */\n  goToGraphPie3() {\n    this.navCtrl.push(GraphPie3Page);\n  }\n\n\n  goToGraphBar3() {\n    this.navCtrl.push(GraphBar3Page);\n  }\n\n\n  /**\n    * Chart methodology starts here\n    */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n  @ViewChild('lineChart') lineChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm for each of the last 12 months.\n    * Charts are all dynamic to new data.\n    */\n  getUniqueVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let uniqueVisitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var uniqueVisitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster); //This gives the string of the correct date for the given number\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n\n              for (var b = 0; b < uniqueVisitsArrayPerMonth.length; b++) {\n                if (uniqueVisitsArrayPerMonth[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n              }\n            }\n\n          }\n          //This is where we push the chart data\n          console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          uniqueVisitsMonthsArray.push(uniqueVisitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < uniqueVisitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          } else if (this.maxValue < uniqueVisitsMonthsArray[d]) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          }\n        }\n\n        for (d = uniqueVisitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(uniqueVisitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n\n\n        this.createLineChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n\n  /**\n* Methods takes the data defined and creates a chart\n*/\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Unique Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-scatter3/graph-scatter3.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphBar3Page } from '../graph-bar3/graph-bar3';\nimport { GraphScatter3Page } from '../graph-scatter3/graph-scatter3';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-pie3',\n  templateUrl: 'graph-pie3.html',\n})\nexport class GraphPie3Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n    this.getUniqueVisitsPerMonth();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter3() {\n    this.navCtrl.push(GraphScatter3Page);\n  }\n\n  goToGraphBar3() {\n    this.navCtrl.push(GraphBar3Page);\n  }\n\n  /**\n    * Chart methodology starts here\n    */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(0, 102, 0, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(0, 102, 0, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)'\n  ];\n\n\n  @ViewChild('pieChart') pieChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm for each of the last 12 months.\n    * Charts are all dynamic to new data.\n    */\n  getUniqueVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let uniqueVisitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var uniqueVisitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster); //This gives the string of the correct date for the given number\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n\n              for (var b = 0; b < uniqueVisitsArrayPerMonth.length; b++) {\n                if (uniqueVisitsArrayPerMonth[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n              }\n            }\n\n          }\n          //This is where we push the chart data\n          console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          uniqueVisitsMonthsArray.push(uniqueVisitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < uniqueVisitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          } else if (this.maxValue < uniqueVisitsMonthsArray[d]) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          }\n        }\n\n        for (d = uniqueVisitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(uniqueVisitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n\n\n        this.createPieChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Unique Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 60,\n              right: 60,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-pie3/graph-pie3.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie3Page } from '../graph-pie3/graph-pie3';\nimport { GraphScatter3Page } from '../graph-scatter3/graph-scatter3';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n@Component({\n  selector: 'page-graph-bar3',\n  templateUrl: 'graph-bar3.html',\n})\nexport class GraphBar3Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getUniqueVisitsPerMonth();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter3() {\n    this.navCtrl.push(GraphScatter3Page);\n  }\n\n  goToGraphPie3() {\n    this.navCtrl.push(GraphPie3Page);\n  }\n\n\n  /**\n    * Chart methodology starts here\n    */\n  chart_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(102, 204, 0, 0.5)',\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)'\n  ];\n\n  @ViewChild('barChart') barChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n\n  /**\n    * Methods calculates the total number of unique visitors to the farm for each of the last 12 months.\n    * Charts are all dynamic to new data.\n    */\n  getUniqueVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let uniqueVisitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var uniqueVisitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster); //This gives the string of the correct date for the given number\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n\n              for (var b = 0; b < uniqueVisitsArrayPerMonth.length; b++) {\n                if (uniqueVisitsArrayPerMonth[b] === currentUserID) {\n                  booleanCheck = 1;\n                  break;\n                }\n              }\n              if (booleanCheck === 0) {\n                uniqueVisitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n              }\n            }\n\n          }\n          //This is where we push the chart data\n          console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          uniqueVisitsMonthsArray.push(uniqueVisitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < uniqueVisitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          } else if (this.maxValue < uniqueVisitsMonthsArray[d]) {\n            this.maxValue = uniqueVisitsMonthsArray[d];\n          }\n        }\n\n        for (d = uniqueVisitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(uniqueVisitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n\n\n        this.createBarChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Unique Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-bar3/graph-bar3.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie4Page } from '../graph-pie4/graph-pie4';\nimport { GraphBar4Page } from '../graph-bar4/graph-bar4';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-scatter4',\n  templateUrl: 'graph-scatter4.html',\n})\nexport class GraphScatter4Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n     * This is the logic that assigns the desired background, chosen in\n     * admin-app-settings.ts, to the background of the current page.\n     */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getVisitsPerMonth();\n  }\n\n  /**\n     * This method opens the homepage.\n     */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n    * Methods below take user to different forms of the same graph \n    */\n  goToGraphPie4() {\n    this.navCtrl.push(GraphPie4Page);\n  }\n\n  goToGraphBar4() {\n    this.navCtrl.push(GraphBar4Page);\n  }\n\n  /**\n    * Chart methodology starts here\n    */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n  @ViewChild('lineChart') lineChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of visitors to the farm for each of the last 12 months.\n    * Charts are all dynamic to new data.\n    */\n  getVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let visitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var visitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            var currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n          //This is where we push the chart data\n          // console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          visitsMonthsArray.push(visitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < visitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsMonthsArray[d];\n          } else if (this.maxValue < visitsMonthsArray[d]) {\n            this.maxValue = visitsMonthsArray[d];\n          }\n        }\n\n        for (d = visitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(visitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n        this.createLineChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Number of Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-scatter4/graph-scatter4.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphBar4Page } from '../graph-bar4/graph-bar4';\nimport { GraphScatter4Page } from '../graph-scatter4/graph-scatter4';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-pie4',\n  templateUrl: 'graph-pie4.html',\n})\nexport class GraphPie4Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n     * This is the logic that assigns the desired background, chosen in\n     * admin-app-settings.ts, to the background of the current page.\n     */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n    this.getVisitsPerMonth();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n  /**\n  * This method takes user back to list of all graphs\n  */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter4() {\n    this.navCtrl.push(GraphScatter4Page);\n  }\n\n  goToGraphBar4() {\n    this.navCtrl.push(GraphBar4Page);\n  }\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n  @ViewChild('pieChart') pieChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n   * Methods calculates the total number of visitors to the farm for each of the last 12 months.\n   * Charts are all dynamic to new data.\n   */\n  getVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let visitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var visitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            var currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n          //This is where we push the chart data\n          // console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          visitsMonthsArray.push(visitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < visitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsMonthsArray[d];\n          } else if (this.maxValue < visitsMonthsArray[d]) {\n            this.maxValue = visitsMonthsArray[d];\n          }\n        }\n\n        for (d = visitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(visitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n        this.createPieChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n    * Methods takes the data defined and creates a chart\n    */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Number of Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 60,\n              right: 60,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-pie4/graph-pie4.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie4Page } from '../graph-pie4/graph-pie4';\nimport { GraphScatter4Page } from '../graph-scatter4/graph-scatter4';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-bar4',\n  templateUrl: 'graph-bar4.html',\n})\nexport class GraphBar4Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n     * This is the logic that assigns the desired background, chosen in\n     * admin-app-settings.ts, to the background of the current page.\n     */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getVisitsPerMonth();\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n     * This method takes user back to list of all graphs\n     */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter4() {\n    this.navCtrl.push(GraphScatter4Page);\n  }\n\n  goToGraphPie4() {\n    this.navCtrl.push(GraphPie4Page);\n  }\n\n  /**\n    * Chart methodology starts here\n    */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n  @ViewChild('barChart') barChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n  * Methods calculates the total number of visitors to the farm for each of the last 12 months.\n  * Charts are all dynamic to new data.\n  */\n  getVisitsPerMonth() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          //Need to do a logic check here to see if the current userId is contained\n          var booleanCheck = 0;\n\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n        let visitsMonthsArray = [] //This will always have a length of 12\n        let monthMatchingArray = [] //This will also have a length of 12\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n          var visitsArrayPerMonth = []\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n            booleanCheck = 0; //Resets to 0 after each iteration\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            var currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Checking the userID contained in the first element of each new line to see if it is already contained in the arraylist\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n          //This is where we push the chart data\n          // console.log(\"For: \" + currentMonthMaster + \"/\" + currentYearMaster + \", the number of unique visitors is: \" + uniqueVisitsArrayPerMonth.length);\n          visitsMonthsArray.push(visitsArrayPerMonth.length);\n\n        }\n        for (var d = 0; d < visitsMonthsArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = visitsMonthsArray[d];\n          } else if (this.maxValue < visitsMonthsArray[d]) {\n            this.maxValue = visitsMonthsArray[d];\n          }\n        }\n\n        for (d = visitsMonthsArray.length - 1; d >= 0; --d) {\n          this.chartLabels.push(monthMatchingArray[d]);\n          this.chartValues.push(visitsMonthsArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n        this.createBarChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Total Number of Visitors Per Month',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-bar4/graph-bar4.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphBar5Page } from '../graph-bar5/graph-bar5';\nimport { GraphPie5Page } from '../graph-pie5/graph-pie5';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-scatter5',\n  templateUrl: 'graph-scatter5.html',\n})\nexport class GraphScatter5Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getDiffNumberOfVisitsPerYear();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad GraphScatter5Page');\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphPie5() {\n    this.navCtrl.push(GraphPie5Page);\n  }\n\n  goToGraphBar5() {\n    this.navCtrl.push(GraphBar5Page);\n  }\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n\n  @ViewChild('lineChart') lineChart;\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of visitors to the farm for each of the last 12 months\n    * and gives a breakdown of the frequency of returning visitors. There are 7 categories: \n    * \"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\" , \"21-24 visits\", \"25+ visits\"\n    * Charts are all dynamic to new data.\n    */\n  getDiffNumberOfVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n\n        let monthMatchingArray = [] //This will also have a length of 12\n        let visitsArrayPerMonth = [] //holds every user ID for the last 12 months\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n\n\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Gives a list of all the userIDs that have logged in for the given month\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n\n        }\n\n\n        let numberOfVisitsArray = [\"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\", \"21-24 visits\", \"25+ visits\"]\n        let previouslyCountedIDs = []\n        var counter14 = 0;\n        var counter58 = 0;\n        var counter912 = 0;\n        var counter1316 = 0;\n        var counter1720 = 0;\n        var counter2124 = 0;\n        var counter25 = 0;\n\n        // Here is where we determine the tallys for each strata\n        for (i = 0; i < visitsArrayPerMonth.length; i++) {\n          var counter = 0;\n          var currentIDForCounting = visitsArrayPerMonth[i];\n          var booleanCheck = 0; //Resets to 0 after each iteration\n          console.log(\"Flag\");\n\n          for (var b = 0; b < previouslyCountedIDs.length; b++) {\n            if (previouslyCountedIDs[b] === currentIDForCounting) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n\n          if (booleanCheck === 0) {  //Boolean cheack for if the currentIDForCounting has already been counted, if it has, it is bypassed\n            for (j = 0; j < visitsArrayPerMonth.length; j++) {\n              console.log(\"currentIDForCounting: \" + currentIDForCounting + \", visitsArrayPerMonth[j]: \" + visitsArrayPerMonth[j])\n              if (currentIDForCounting === visitsArrayPerMonth[j]) { //Boolean Check here to ensure same number not used twice\n                counter++;\n              }\n            }\n\n            console.log(\"currentIDForCounting: \" + currentIDForCounting + \"Visited:\" + counter + \"times\")\n            //Then works out which category the userID belongs to\n            if (counter < 5) {\n              counter14++;\n            } else if (counter < 9 && counter > 4) {\n              counter58++;\n            } else if (counter < 13 && counter > 8) {\n              counter912++;\n            } else if (counter < 17 && counter > 12) {\n              counter1316++;\n            } else if (counter < 21 && counter > 16) {\n              counter1720++;\n            } else if (counter < 25 && counter > 20) {\n              counter2124++;\n            } else if (counter > 24) {\n              counter25++;\n            }\n\n            previouslyCountedIDs.push(currentIDForCounting);// adds the id to an array so that it isn't counted more than once\n\n          }\n        }\n\n        let tallyArray = [counter14, counter58, counter912, counter1316, counter1720, counter2124, counter25] //This will have a length of 7\n\n        //Determining the max y-axis limits for the graph\n        for (var d = 0; d < tallyArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = tallyArray[d];\n          } else if (this.maxValue < tallyArray[d]) {\n            this.maxValue = tallyArray[d];\n          }\n        }\n\n        //Pushing the values and labels required to the graph\n        for (d = 0; d < tallyArray.length; d++) {\n          this.chartLabels.push(numberOfVisitsArray[d]);\n          this.chartValues.push(tallyArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n        this.createLineChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createLineChart(): void {\n    this.lineChartEl = new Chart(this.lineChart.nativeElement,\n      {\n        type: 'line',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Individuals That Visited',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours,\n            fill: false\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-scatter5/graph-scatter5.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\nimport { GraphPie5Page } from '../graph-pie5/graph-pie5';\nimport { GraphScatter5Page } from '../graph-scatter5/graph-scatter5';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-bar5',\n  templateUrl: 'graph-bar5.html',\n})\nexport class GraphBar5Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getDiffNumberOfVisitsPerYear();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad GraphBar5Page');\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter5() {\n    this.navCtrl.push(GraphScatter5Page);\n  }\n\n  goToGraphPie5() {\n    this.navCtrl.push(GraphPie5Page);\n  }\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n\n  @ViewChild('barChart') barChart;\n\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of visitors to the farm for each of the last 12 months\n    * and gives a breakdown of the frequency of returning visitors. There are 7 categories: \n    * \"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\" , \"21-24 visits\", \"25+ visits\"\n    * Charts are all dynamic to new data.\n    */\n  getDiffNumberOfVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n\n        let monthMatchingArray = [] //This will also have a length of 12\n        let visitsArrayPerMonth = [] //holds every user ID for the last 12 months\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n\n\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Gives a list of all the userIDs that have logged in for the given month\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n\n        }\n\n\n        let numberOfVisitsArray = [\"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\", \"21-24 visits\", \"25+ visits\"]\n        let previouslyCountedIDs = []\n        var counter14 = 0;\n        var counter58 = 0;\n        var counter912 = 0;\n        var counter1316 = 0;\n        var counter1720 = 0;\n        var counter2124 = 0;\n        var counter25 = 0;\n\n        // Here is where we determine the tallys for each strata\n        for (i = 0; i < visitsArrayPerMonth.length; i++) {\n          var counter = 0;\n          var currentIDForCounting = visitsArrayPerMonth[i];\n          var booleanCheck = 0; //Resets to 0 after each iteration\n          console.log(\"Flag\");\n\n          for (var b = 0; b < previouslyCountedIDs.length; b++) {\n            if (previouslyCountedIDs[b] === currentIDForCounting) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n\n          if (booleanCheck === 0) {  //Boolean cheack for if the currentIDForCounting has already been counted, if it has, it is bypassed\n            for (j = 0; j < visitsArrayPerMonth.length; j++) {\n              console.log(\"currentIDForCounting: \" + currentIDForCounting + \", visitsArrayPerMonth[j]: \" + visitsArrayPerMonth[j])\n              if (currentIDForCounting === visitsArrayPerMonth[j]) { //Boolean Check here to ensure same number not used twice\n                counter++;\n              }\n            }\n\n            console.log(\"currentIDForCounting: \" + currentIDForCounting + \" Visited: \" + counter + \"times\")\n            //Then works out which category the userID belongs to\n            if (counter < 5) {\n              counter14++;\n            } else if (counter < 9 && counter > 4) {\n              counter58++;\n            } else if (counter < 13 && counter > 8) {\n              counter912++;\n            } else if (counter < 17 && counter > 12) {\n              counter1316++;\n            } else if (counter < 21 && counter > 16) {\n              counter1720++;\n            } else if (counter < 25 && counter > 20) {\n              counter2124++;\n            } else if (counter > 24) {\n              counter25++;\n            }\n\n            previouslyCountedIDs.push(currentIDForCounting);// adds the id to an array so that it isn't counted more than once\n\n          }\n        }\n\n        let tallyArray = [counter14, counter58, counter912, counter1316, counter1720, counter2124, counter25] //This will have a length of 7\n\n        //Determining the max y-axis limits for the graph\n        for (var d = 0; d < tallyArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = tallyArray[d];\n          } else if (this.maxValue < tallyArray[d]) {\n            this.maxValue = tallyArray[d];\n\n          }\n        }\n\n        //Pushing the values and labels required to the graph\n        for (d = 0; d < tallyArray.length; d++) {\n          console.log(\"Tally array: \" + tallyArray[d]);\n          this.chartLabels.push(numberOfVisitsArray[d]);\n          this.chartValues.push(tallyArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n        console.log(this.chartValues)\n        this.createBarChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createBarChart(): void {\n    this.barChartEl = new Chart(this.barChart.nativeElement,\n      {\n        type: 'bar',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Individuals That Visited',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          legend: {\n            display: true,\n            boxWidth: 80,\n            fontSize: 15,\n            padding: 0\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                stepSize: Math.floor(this.maxValue / 10),\n                max: this.maxValue + 2\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              }\n            }]\n          }\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-bar5/graph-bar5.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { Chart } from 'chart.js';\n\nimport { HomepagePage } from '../homepage/homepage';\nimport { AdminVisitorDataPage } from '../admin-visitor-data/admin-visitor-data';\n\nimport { GraphBar5Page } from '../graph-bar5/graph-bar5';\nimport { GraphScatter5Page } from '../graph-scatter5/graph-scatter5';\nimport { Storage } from '@ionic/storage';\nimport { sqlitedatabase } from '../../providers/sqlitedatabase/sqlitedatabase';\n\n/**\n  *'Chart.js' tutorial from https://www.joshmorony.com/adding-responsive-charts-graphs-to-ionic-2-applications/\n  * helped setup the basics of each graph.\n  */\n\n\n@Component({\n  selector: 'page-graph-pie5',\n  templateUrl: 'graph-pie5.html',\n})\nexport class GraphPie5Page {\n\n  wallpaperID: string;\n  winter: boolean = true; //default\n  summer: boolean = false;\n  autumn: boolean = false;\n  spring: boolean = false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage, private sqlitedatabase: sqlitedatabase) {\n\n    /**\n      * This is the logic that assigns the desired background, chosen in\n      * admin-app-settings.ts, to the background of the current page.\n      */\n    var promise1 = this.storage.get('wallpaperToggle'); //\n    promise1.then(wallpaperID => {\n      console.log(wallpaperID);\n\n      if (wallpaperID == \"autumn\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = true;\n        this.spring = false;\n      } else if (wallpaperID == \"summer\") {\n        this.winter = false;\n        this.summer = true;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"winter\") {\n        this.winter = true;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = false;\n      } else if (wallpaperID == \"spring\") {\n        this.winter = false;\n        this.summer = false;\n        this.autumn = false;\n        this.spring = true;\n      }\n\n    });\n\n    this.getDiffNumberOfVisitsPerYear();\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad GraphPie5Page');\n  }\n\n  /**\n   * This method opens the homepage.\n   */\n  goToHomepage() {\n    this.navCtrl.push(HomepagePage);\n  }\n\n  /**\n   * This method takes user back to list of all graphs\n   */\n  goToAdminVisitorData() {\n    this.navCtrl.push(AdminVisitorDataPage);\n  }\n\n  /**\n  * Methods below take user to different forms of the same graph \n  */\n  goToGraphScatter5() {\n    this.navCtrl.push(GraphScatter5Page);\n  }\n\n  goToGraphBar5() {\n    this.navCtrl.push(GraphBar5Page);\n  }\n\n  /**\n  * Chart methodology starts here\n  */\n  chart_colors: any[] = [\n    'rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n  hover_colors: any[] = ['rgba(255, 255, 0, 0.5)',\n    'rgba(0, 153, 0, 0.5)',\n    'rgba(153, 255, 51, 0.5)',\n    'rgba(204, 102, 0, 0.5)',\n    'rgba(102, 51, 0, 0.5)',\n    'rgba(255, 102, 178, 0.5)',\n    'rgba(0, 0, 204, 0.5)',\n    'rgba(204, 153, 255, 0.5)',\n    'rgba(153, 204, 255, 0.5)',\n    'rgba(255, 204, 204, 0.5)',\n    'rgba(255, 51, 51, 0.5)',\n    'rgba(102, 204, 0, 0.5)'\n  ];\n\n\n  @ViewChild('pieChart') pieChart;\n\n\n  public maxValue;\n  public answers: any = [];\n  public pieChartEl: any;\n  public barChartEl: any;\n  public lineChartEl: any;\n  public chartLabels: any = [];\n  public chartValues: any = [];\n  public chartColours: any = [];\n  public chartHoverColours: any = [];\n  public chartLoadingEl: any;\n\n  /**\n    * Methods calculates the total number of visitors to the farm for each of the last 12 months\n    * and gives a breakdown of the frequency of returning visitors. There are 7 categories: \n    * \"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\" , \"21-24 visits\", \"25+ visits\"\n    * Charts are all dynamic to new data.\n    */\n  getDiffNumberOfVisitsPerYear() {\n    console.log(\"Getting total number of unique visits per month\")\n\n    this.sqlitedatabase.listLoginDetailsForGraphs()\n      .then((stats) => {\n\n        console.log(\"Number of visits (total): \" + stats.length);\n\n        var maxYear = 0;\n        var maxMonth = 0;\n        for (var j = 0; j < stats.length; j++) {\n          var currentDateHandled = new Date(stats[j].login_time);\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          var currentYear = currentDateInfoArray[3];\n\n          if (maxYear < parseInt(currentYear)) {\n            maxYear = parseInt(currentYear); //Finds the most recent year\t\n          }\n        }\n        for (j = 0; j < stats.length; j++) {\n          currentDateHandled = new Date(stats[j].login_time);\n\n          //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n          currentDateInfoArray = currentDateHandled.toString().split(\" \");\n          currentYear = currentDateInfoArray[3];\n          var currentMonth = currentDateInfoArray[1];\n          var currentMonthInt = 0;\n\n          if (currentMonth == 'Jan') {\n            currentMonthInt = 1;\n          } else if (currentMonth == 'Feb') {\n            currentMonthInt = 2;\n          } else if (currentMonth == 'Mar') {\n            currentMonthInt = 3;\n          } else if (currentMonth == 'Apr') {\n            currentMonthInt = 4;\n          } else if (currentMonth == 'May') {\n            currentMonthInt = 5;\n          } else if (currentMonth == 'Jun') {\n            currentMonthInt = 6;\n          } else if (currentMonth == 'Jul') {\n            currentMonthInt = 7;\n          } else if (currentMonth == 'Aug') {\n            currentMonthInt = 8;\n          } else if (currentMonth == 'Sep') {\n            currentMonthInt = 9;\n          } else if (currentMonth == 'Oct') {\n            currentMonthInt = 10;\n          } else if (currentMonth == 'Nov') {\n            currentMonthInt = 11;\n          } else if (currentMonth == 'Dec') {\n            currentMonthInt = 12;\n          }\n\n          if (parseInt(currentYear) === maxYear && maxMonth < currentMonthInt) {\n            maxMonth = currentMonthInt;\n          }\n\n        } //Here ends the first for loop\n\n        let monthMatchingArray = [] //This will also have a length of 12\n        let visitsArrayPerMonth = [] //holds every user ID for the last 12 months\n\n        var currentMonthMaster = maxMonth + 1;\n        var currentYearMaster = maxYear;\n\n        for (var a = 0; a < 12; ++a) {\n\n\n          currentMonthMaster = currentMonthMaster - 1;\n          if (currentMonthMaster === 0) {\n            currentMonthMaster = 12;\n            currentYearMaster = maxYear - 1;\n          }\n\n          monthMatchingArray.push(currentMonthMaster + \"/\" + currentYearMaster);\n\n\n          //Now the unique visit logic starts here\n          for (var i = 0; i < stats.length; ++i) {\n\n            currentDateHandled = new Date(stats[i].login_time);\n            //Tue Dec 26 2017 14:33:19 GMT+0000 (GMT) (Day, Month, Date, Year, Time, Summat)\n            var currentDateInfoArray = currentDateHandled.toString().split(\" \");\n            currentYear = currentDateInfoArray[3];\n            currentMonth = currentDateInfoArray[1];\n            currentMonthInt = 0;\n\n            if (currentMonth == 'Jan') {\n              currentMonthInt = 1;\n            } else if (currentMonth == 'Feb') {\n              currentMonthInt = 2;\n            } else if (currentMonth == 'Mar') {\n              currentMonthInt = 3;\n            } else if (currentMonth == 'Apr') {\n              currentMonthInt = 4;\n            } else if (currentMonth == 'May') {\n              currentMonthInt = 5;\n            } else if (currentMonth == 'Jun') {\n              currentMonthInt = 6;\n            } else if (currentMonth == 'Jul') {\n              currentMonthInt = 7;\n            } else if (currentMonth == 'Aug') {\n              currentMonthInt = 8;\n            } else if (currentMonth == 'Sep') {\n              currentMonthInt = 9;\n            } else if (currentMonth == 'Oct') {\n              currentMonthInt = 10;\n            } else if (currentMonth == 'Nov') {\n              currentMonthInt = 11;\n            } else if (currentMonth == 'Dec') {\n              currentMonthInt = 12;\n            }\n\n            if (parseInt(currentYear) === currentYearMaster && currentMonthInt === currentMonthMaster) {\n              //Gives a list of all the userIDs that have logged in for the given month\n              var currentUserID = stats[i].user_id;\n              visitsArrayPerMonth.push(currentUserID); //Adds the year if it isn't already contained\n            }\n\n          }\n\n        }\n\n\n        let numberOfVisitsArray = [\"1-4 visits\", \"5-8 visits\", \"9-12 visits\", \"13-16 visits\", \"17-20 visits\", \"21-24 visits\", \"25+ visits\"]\n        let previouslyCountedIDs = []\n        var counter14 = 0;\n        var counter58 = 0;\n        var counter912 = 0;\n        var counter1316 = 0;\n        var counter1720 = 0;\n        var counter2124 = 0;\n        var counter25 = 0;\n\n        // Here is where we determine the tallys for each strata\n        for (i = 0; i < visitsArrayPerMonth.length; i++) {\n          var counter = 0;\n          var currentIDForCounting = visitsArrayPerMonth[i];\n          var booleanCheck = 0; //Resets to 0 after each iteration\n          console.log(\"Flag\");\n\n          for (var b = 0; b < previouslyCountedIDs.length; b++) {\n            if (previouslyCountedIDs[b] === currentIDForCounting) {\n              booleanCheck = 1;\n              break;\n            }\n          }\n\n          if (booleanCheck === 0) {  //Boolean cheack for if the currentIDForCounting has already been counted, if it has, it is bypassed\n            for (j = 0; j < visitsArrayPerMonth.length; j++) {\n              console.log(\"currentIDForCounting: \" + currentIDForCounting + \", visitsArrayPerMonth[j]: \" + visitsArrayPerMonth[j])\n              if (currentIDForCounting === visitsArrayPerMonth[j]) { //Boolean Check here to ensure same number not used twice\n                counter++;\n              }\n            }\n\n            console.log(\"currentIDForCounting: \" + currentIDForCounting + \"Visited:\" + counter + \"times\")\n            //Then works out which category the userID belongs to\n            if (counter < 5) {\n              counter14++;\n            } else if (counter < 9 && counter > 4) {\n              counter58++;\n            } else if (counter < 13 && counter > 8) {\n              counter912++;\n            } else if (counter < 17 && counter > 12) {\n              counter1316++;\n            } else if (counter < 21 && counter > 16) {\n              counter1720++;\n            } else if (counter < 25 && counter > 20) {\n              counter2124++;\n            } else if (counter > 24) {\n              counter25++;\n            }\n\n            previouslyCountedIDs.push(currentIDForCounting);// adds the id to an array so that it isn't counted more than once\n\n          }\n        }\n\n        let tallyArray = [counter14, counter58, counter912, counter1316, counter1720, counter2124, counter25] //This will have a length of 7\n\n        //Determining the max y-axis limits for the graph\n        for (var d = 0; d < tallyArray.length; ++d) {\n          if (d === 0) {\n            this.maxValue = tallyArray[d];\n          } else if (this.maxValue < tallyArray[d]) {\n            this.maxValue = tallyArray[d];\n          }\n        }\n\n        //Pushing the values and labels required to the graph\n        for (d = 0; d < tallyArray.length; d++) {\n          this.chartLabels.push(numberOfVisitsArray[d]);\n          this.chartValues.push(tallyArray[d]);\n          this.chartColours.push(this.chart_colors[d]);\n          this.chartHoverColours.push(this.hover_colors[d]);\n        }\n\n        this.createPieChart();\n\n      }\n      , err => {\n        console.log(\"something went wrong on retrieving login history\");\n      });\n  }\n\n  /**\n   * Methods takes the data defined and creates a chart\n   */\n  createPieChart(): void {\n\n    this.pieChartEl = new Chart(this.pieChart.nativeElement,\n      {\n        type: 'pie',\n        data: {\n          labels: this.chartLabels,\n          datasets: [{\n            label: 'Number of Individuals That Visited',\n            data: this.chartValues,\n            duration: 2000,\n            easing: 'easeInQuart',\n            backgroundColor: this.chartColours,\n            hoverBackgroundColor: this.chartHoverColours\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 60,\n              right: 60,\n              top: 0,\n              bottom: 0\n            }\n          },\n          animation: {\n            duration: 5000\n          }\n        }\n      });\n\n\n\n    this.chartLoadingEl = this.pieChartEl.generateLegend();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graph-pie5/graph-pie5.ts"],"sourceRoot":""}